#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Information about how the marketing list was created. Restricts the type of objects that can be added to the list.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum list_createdfromcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Account = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Contact = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lead = 4,
	}
	
	/// <summary>
	/// Status of the marketing list.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum list_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the marketing list.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum list_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Group of existing or potential customers created for a marketing campaign or other sales purposes.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("list")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class List : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the list entity
		/// </summary>
		public partial class Fields
		{
			public const string CheckForDoNotSendMMOnListMembersName = "checkfordonotsendmmonlistmembersname";
			public const string Cost = "cost";
			public const string Cost_Base = "cost_base";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedFromCode = "createdfromcode";
			public const string CreatedFromCodeName = "createdfromcodename";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DoNotSendOnOptOut = "donotsendonoptout";
			public const string ExchangeRate = "exchangerate";
			public const string IgnoreInactiveListMembers = "ignoreinactivelistmembers";
			public const string IgnoreInactiveListMembersName = "ignoreinactivelistmembersname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string LastUsedOn = "lastusedon";
			public const string ListId = "listid";
			public const string Id = "listid";
			public const string ListName = "listname";
			public const string LockStatus = "lockstatus";
			public const string LockStatusName = "lockstatusname";
			public const string MemberCount = "membercount";
			public const string MemberType = "membertype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string processedMemberCount = "processedmembercount";
			public const string processFetchXML = "processfetchxml";
			public const string ProcessId = "processid";
			public const string Purpose = "purpose";
			public const string Query = "query";
			public const string Source = "source";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string Type = "type";
			public const string TypeName = "typename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string List_Annotation = "List_Annotation";
			public const string List_AsyncOperations = "List_AsyncOperations";
			public const string list_connections1 = "list_connections1";
			public const string list_connections2 = "list_connections2";
			public const string List_ProcessSessions = "List_ProcessSessions";
			public const string listaccount_association = "listaccount_association";
			public const string listcontact_association = "listcontact_association";
			public const string listlead_association = "listlead_association";
			public const string business_unit_list = "business_unit_list";
			public const string lk_list_createdby = "lk_list_createdby";
			public const string lk_list_createdonbehalfby = "lk_list_createdonbehalfby";
			public const string lk_list_modifiedby = "lk_list_modifiedby";
			public const string lk_list_modifiedonbehalfby = "lk_list_modifiedonbehalfby";
			public const string processstage_lists = "processstage_lists";
			public const string team_list = "team_list";
			public const string user_list = "user_list";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public List() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "list";
		
		public const string EntityLogicalCollectionName = "lists";
		
		public const string EntitySetName = "lists";
		
		public const int EntityTypeCode = 4300;
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkfordonotsendmmonlistmembersname")]
		public string CheckForDoNotSendMMOnListMembersName
		{
			get
			{
				if (this.FormattedValues.Contains("donotsendonoptout"))
				{
					return this.FormattedValues["donotsendonoptout"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the cost of obtaining the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cost")]
		public Microsoft.Xrm.Sdk.Money Cost
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cost");
			}
			set
			{
				this.SetAttributeValue("cost", value);
			}
		}
		
		/// <summary>
		/// Value of the Cost in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cost_base")]
		public Microsoft.Xrm.Sdk.Money Cost_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cost_base");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the type of members that this marketing list will contain: accounts, contacts, or leads. Each list can have only one member type and this value can't be changed after the marketing list is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdfromcode")]
		public virtual list_createdfromcode? CreatedFromCode
		{
			get
			{
				return ((list_createdfromcode?)(EntityOptionSetEnum.GetEnum(this, "createdfromcode")));
			}
			set
			{
				this.SetAttributeValue("createdfromcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdfromcodename")]
		public string CreatedFromCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("createdfromcode"))
				{
					return this.FormattedValues["createdfromcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type additional information to describe the marketing list, such as the intended use or date of the last update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, those who have chosen to opt out won't be excluded from the list. This means they will receive marketing materials.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendonoptout")]
		public System.Nullable<bool> DoNotSendOnOptOut
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendonoptout");
			}
			set
			{
				this.SetAttributeValue("donotsendonoptout", value);
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select whether inactive accounts, contacts, or leads should be excluded from the campaign activity distribution when the marketing list is included in a campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreinactivelistmembers")]
		public System.Nullable<bool> IgnoreInactiveListMembers
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ignoreinactivelistmembers");
			}
			set
			{
				this.SetAttributeValue("ignoreinactivelistmembers", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreinactivelistmembersname")]
		public string IgnoreInactiveListMembersName
		{
			get
			{
				if (this.FormattedValues.Contains("ignoreinactivelistmembers"))
				{
					return this.FormattedValues["ignoreinactivelistmembers"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Shows the date and time when the marketing list was last used in a campaign or in the creation of activities or opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedon")]
		public System.Nullable<System.DateTime> LastUsedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedon");
			}
			set
			{
				this.SetAttributeValue("lastusedon", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listid")]
		public System.Nullable<System.Guid> ListId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("listid");
			}
			set
			{
				this.SetAttributeValue("listid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ListId = value;
			}
		}
		
		/// <summary>
		/// Type a name for the marketing list so that it is identified correctly in lists.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listname")]
		public string ListName
		{
			get
			{
				return this.GetAttributeValue<string>("listname");
			}
			set
			{
				this.SetAttributeValue("listname", value);
			}
		}
		
		/// <summary>
		/// Select whether the marketing list is locked. If Yes is selected, no additional members can be added to the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lockstatus")]
		public System.Nullable<bool> LockStatus
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("lockstatus");
			}
			set
			{
				this.SetAttributeValue("lockstatus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lockstatusname")]
		public string LockStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("lockstatus"))
				{
					return this.FormattedValues["lockstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the sum of all members in the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membercount")]
		public System.Nullable<int> MemberCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("membercount");
			}
			set
			{
				this.SetAttributeValue("membercount", value);
			}
		}
		
		/// <summary>
		/// Type of the members that can be stored in the marketing list. Please do not remove from form!
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membertype")]
		public System.Nullable<int> MemberType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("membertype");
			}
			set
			{
				this.SetAttributeValue("membertype", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processedmembercount")]
		public System.Nullable<int> processedMemberCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("processedmembercount");
			}
			set
			{
				this.SetAttributeValue("processedmembercount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processfetchxml")]
		public string processFetchXML
		{
			get
			{
				return this.GetAttributeValue<string>("processfetchxml");
			}
			set
			{
				this.SetAttributeValue("processfetchxml", value);
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Type the intended use of the marketing list to identify its key segments, target offers, or business group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purpose")]
		public string Purpose
		{
			get
			{
				return this.GetAttributeValue<string>("purpose");
			}
			set
			{
				this.SetAttributeValue("purpose", value);
			}
		}
		
		/// <summary>
		/// Query used for retrieving members of marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("query")]
		public string Query
		{
			get
			{
				return this.GetAttributeValue<string>("query");
			}
			set
			{
				this.SetAttributeValue("query", value);
			}
		}
		
		/// <summary>
		/// Type the source of the marketing list, such as a third-party supplier or internal database.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public string Source
		{
			get
			{
				return this.GetAttributeValue<string>("source");
			}
			set
			{
				this.SetAttributeValue("source", value);
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the marketing list is active or inactive. Inactive marketing lists are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual list_statecode? StateCode
		{
			get
			{
				return ((list_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the marketing list's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual list_statuscode? StatusCode
		{
			get
			{
				return ((list_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Select whether you want the marketing list to be static or dynamic. The members in a static marketing list are unchanging. A dynamic marketing list is based on a dynamic query that retrieves the updated list of members
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("type");
			}
			set
			{
				this.SetAttributeValue("type", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("typename")]
		public string TypeName
		{
			get
			{
				if (this.FormattedValues.Contains("type"))
				{
					return this.FormattedValues["type"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N List_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("List_Annotation")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Annotation> List_Annotation
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Annotation>("List_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Annotation>("List_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N List_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("List_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> List_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("List_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("List_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N list_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("list_connections1")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> list_connections1
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("list_connections1", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("list_connections1", null, value);
			}
		}
		
		/// <summary>
		/// 1:N list_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("list_connections2")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> list_connections2
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("list_connections2", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("list_connections2", null, value);
			}
		}
		
		/// <summary>
		/// 1:N List_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("List_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> List_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("List_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("List_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// N:N listaccount_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listaccount_association")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Account> listaccount_association
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Account>("listaccount_association", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Account>("listaccount_association", null, value);
			}
		}
		
		/// <summary>
		/// N:N listcontact_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listcontact_association")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Contact> listcontact_association
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Contact>("listcontact_association", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Contact>("listcontact_association", null, value);
			}
		}
		
		/// <summary>
		/// N:N listlead_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listlead_association")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Lead> listlead_association
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Lead>("listlead_association", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Lead>("listlead_association", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_list")]
		public DataverseEntities.BusinessUnit business_unit_list
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_list", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_list_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_list_createdby")]
		public DataverseEntities.SystemUser lk_list_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_list_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_list_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_list_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_list_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_list_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_list_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_list_modifiedby")]
		public DataverseEntities.SystemUser lk_list_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_list_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_list_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_list_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_list_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_list_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 processstage_lists
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_lists")]
		public DataverseEntities.ProcessStage processstage_lists
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.ProcessStage>("processstage_lists", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.ProcessStage>("processstage_lists", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_list")]
		public DataverseEntities.Team team_list
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_list", null);
			}
		}
		
		/// <summary>
		/// N:1 user_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_list")]
		public DataverseEntities.SystemUser user_list
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("user_list", null);
			}
		}
	}
}
#pragma warning restore CS1591
