#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Type of instance of a recurring series.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum @__opportunityclose_instancetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotRecurring = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringMaster = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringInstance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringException = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringFutureException = 4,
	}
	
	/// <summary>
	/// Status of the opportunity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum OpportunityClose_opportunity_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lost = 2,
	}
	
	/// <summary>
	/// Reason for the status of the opportunity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum OpportunityClose_opportunity_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutSold = 5,
	}
	
	/// <summary>
	/// Priority of the activity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum @__opportunityclose_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Normal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 2,
	}
	
	/// <summary>
	/// Status of the opportunity close activity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunityclose_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	
	/// <summary>
	/// Reason for the status of the opportunity close activity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunityclose_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 3,
	}
	
	/// <summary>
	/// Activity that is created automatically when an opportunity is closed, containing information such as the description of the closing and actual revenue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("opportunityclose")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class OpportunityClose : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the opportunityclose entity
		/// </summary>
		public partial class Fields
		{
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualRevenue = "actualrevenue";
			public const string ActualRevenue_Base = "actualrevenue_base";
			public const string ActualStart = "actualstart";
			public const string Bcc = "bcc";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string Community = "community";
			public const string CommunityName = "communityname";
			public const string CompetitorId = "competitorid";
			public const string CompetitorIdName = "competitoridname";
			public const string CompetitorIdYomiName = "competitoridyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByExternalParty = "createdbyexternalparty";
			public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
			public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string DeliveryLastAttemptedOn = "deliverylastattemptedon";
			public const string DeliveryPriorityCode = "deliveryprioritycode";
			public const string DeliveryPriorityCodeName = "deliveryprioritycodename";
			public const string Description = "description";
			public const string ExchangeItemId = "exchangeitemid";
			public const string ExchangeRate = "exchangerate";
			public const string ExchangeWebLink = "exchangeweblink";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string LeftVoiceMailName = "leftvoicemailname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByExternalParty = "modifiedbyexternalparty";
			public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
			public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OnHoldTime = "onholdtime";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OpportunityStateCode = "opportunitystatecode";
			public const string opportunitystatecodeName = "opportunitystatecodename";
			public const string OpportunityStatusCode = "opportunitystatuscode";
			public const string opportunitystatuscodeName = "opportunitystatuscodename";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Partners = "partners";
			public const string PostponeActivityProcessingUntil = "postponeactivityprocessinguntil";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SenderMailboxId = "sendermailboxid";
			public const string SenderMailboxIdName = "sendermailboxidname";
			public const string SentOn = "senton";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string To = "to";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string opportunityclose_activity_parties = "opportunityclose_activity_parties";
			public const string OpportunityClose_Annotation = "OpportunityClose_Annotation";
			public const string OpportunityClose_AsyncOperations = "OpportunityClose_AsyncOperations";
			public const string account_OpportunityCloses = "account_OpportunityCloses";
			public const string activity_pointer_opportunity_close = "activity_pointer_opportunity_close";
			public const string business_unit_opportunity_close_activities = "business_unit_opportunity_close_activities";
			public const string incident_OpportunityCloses = "incident_OpportunityCloses";
			public const string lead_OpportunityCloses = "lead_OpportunityCloses";
			public const string lk_opportunityclose_createdby = "lk_opportunityclose_createdby";
			public const string lk_opportunityclose_createdonbehalfby = "lk_opportunityclose_createdonbehalfby";
			public const string lk_opportunityclose_modifiedby = "lk_opportunityclose_modifiedby";
			public const string lk_opportunityclose_modifiedonbehalfby = "lk_opportunityclose_modifiedonbehalfby";
			public const string Opportunity_OpportunityClose = "Opportunity_OpportunityClose";
			public const string opportunity_OpportunityCloses = "opportunity_OpportunityCloses";
			public const string team_opportunityclose = "team_opportunityclose";
			public const string user_opportunityclose = "user_opportunityclose";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public OpportunityClose() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "opportunityclose";
		
		public const string EntityLogicalCollectionName = "opportunitycloses";
		
		public const string EntitySetName = "opportunitycloses";
		
		public const int EntityTypeCode = 4208;
		
		/// <summary>
		/// Additional information provided by the external application as JSON. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			set
			{
				this.SetAttributeValue("activityadditionalparams", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecodename")]
		public string ActivityTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("activitytypecode"))
				{
					return this.FormattedValues["activitytypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Actual duration of the opportunity close activity in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			set
			{
				this.SetAttributeValue("actualdurationminutes", value);
			}
		}
		
		/// <summary>
		/// Actual end time of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			set
			{
				this.SetAttributeValue("actualend", value);
			}
		}
		
		/// <summary>
		/// Actual revenue generated for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualrevenue")]
		public Microsoft.Xrm.Sdk.Money ActualRevenue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualrevenue");
			}
			set
			{
				this.SetAttributeValue("actualrevenue", value);
			}
		}
		
		/// <summary>
		/// Value of the Actual Revenue in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualrevenue_base")]
		public Microsoft.Xrm.Sdk.Money ActualRevenue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualrevenue_base");
			}
		}
		
		/// <summary>
		/// Actual start time of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			set
			{
				this.SetAttributeValue("actualstart", value);
			}
		}
		
		/// <summary>
		/// Blind Carbon-copy (bcc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Bcc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Category of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			set
			{
				this.SetAttributeValue("category", value);
			}
		}
		
		/// <summary>
		/// Carbon-copy (cc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Cc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
		public virtual socialprofile_community? Community
		{
			get
			{
				return ((socialprofile_community?)(EntityOptionSetEnum.GetEnum(this, "community")));
			}
			set
			{
				this.SetAttributeValue("community", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("communityname")]
		public string CommunityName
		{
			get
			{
				if (this.FormattedValues.Contains("community"))
				{
					return this.FormattedValues["community"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the competitor with which the opportunity close activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("competitorid")]
		public Microsoft.Xrm.Sdk.EntityReference CompetitorId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("competitorid");
			}
			set
			{
				this.SetAttributeValue("competitorid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("competitoridname")]
		public string CompetitorIdName
		{
			get
			{
				if (this.FormattedValues.Contains("competitorid"))
				{
					return this.FormattedValues["competitorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("competitoridyominame")]
		public string CompetitorIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("competitorid"))
				{
					return this.FormattedValues["competitorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
		public string CreatedByExternalPartyName
		{
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
		public string CreatedByExternalPartyYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the opportunity close activity was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the opportunityclose.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Customer with which the activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customers")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Customers
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("customers");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("customers", value);
				}
				else
				{
					this.SetAttributeValue("customers", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Date and time when the delivery of the activity was last attempted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliverylastattemptedon")]
		public System.Nullable<System.DateTime> DeliveryLastAttemptedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("deliverylastattemptedon");
			}
		}
		
		/// <summary>
		/// Priority of delivery of the activity to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public virtual activitypointer_deliveryprioritycode? DeliveryPriorityCode
		{
			get
			{
				return ((activitypointer_deliveryprioritycode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
			}
			set
			{
				this.SetAttributeValue("deliveryprioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycodename")]
		public string DeliveryPriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("deliveryprioritycode"))
				{
					return this.FormattedValues["deliveryprioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Activity that is created automatically when an opportunity is closed, containing information such as the description of the closing and actual revenue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// The message id of activity which is returned from Exchange Server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeitemid")]
		public string ExchangeItemId
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeitemid");
			}
			set
			{
				this.SetAttributeValue("exchangeitemid", value);
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the web link of Activity of type email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeweblink")]
		public string ExchangeWebLink
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeweblink");
			}
			set
			{
				this.SetAttributeValue("exchangeweblink", value);
			}
		}
		
		/// <summary>
		/// Person who the activity is from.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> From
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual @__opportunityclose_instancetypecode? InstanceTypeCode
		{
			get
			{
				return ((@__opportunityclose_instancetypecode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecodename")]
		public string InstanceTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("instancetypecode"))
				{
					return this.FormattedValues["instancetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether the opportunity close activity was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			set
			{
				this.SetAttributeValue("isbilled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilledname")]
		public string IsBilledName
		{
			get
			{
				if (this.FormattedValues.Contains("isbilled"))
				{
					return this.FormattedValues["isbilled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			set
			{
				this.SetAttributeValue("ismapiprivate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivatename")]
		public string IsMapiPrivateName
		{
			get
			{
				if (this.FormattedValues.Contains("ismapiprivate"))
				{
					return this.FormattedValues["ismapiprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivityname")]
		public string IsRegularActivityName
		{
			get
			{
				if (this.FormattedValues.Contains("isregularactivity"))
				{
					return this.FormattedValues["isregularactivity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information that specifies if the opportunity close activity was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			set
			{
				this.SetAttributeValue("isworkflowcreated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreatedname")]
		public string IsWorkflowCreatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isworkflowcreated"))
				{
					return this.FormattedValues["isworkflowcreated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Left the voice mail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leftvoicemail")]
		public System.Nullable<bool> LeftVoiceMail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("leftvoicemail");
			}
			set
			{
				this.SetAttributeValue("leftvoicemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leftvoicemailname")]
		public string LeftVoiceMailName
		{
			get
			{
				if (this.FormattedValues.Contains("leftvoicemail"))
				{
					return this.FormattedValues["leftvoicemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
		public string ModifiedByExternalPartyName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
		public string ModifiedByExternalPartyYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the opportunity close activity was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the opportunityclose.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the opportunity closed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		public Microsoft.Xrm.Sdk.EntityReference OpportunityId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opportunityid");
			}
			set
			{
				this.SetAttributeValue("opportunityid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityidname")]
		public string OpportunityIdName
		{
			get
			{
				if (this.FormattedValues.Contains("opportunityid"))
				{
					return this.FormattedValues["opportunityid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Status of the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunitystatecode")]
		public virtual OpportunityClose_opportunity_statecode? OpportunityStateCode
		{
			get
			{
				return ((OpportunityClose_opportunity_statecode?)(EntityOptionSetEnum.GetEnum(this, "opportunitystatecode")));
			}
			set
			{
				this.SetAttributeValue("opportunitystatecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunitystatecodename")]
		public string opportunitystatecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("opportunitystatecode"))
				{
					return this.FormattedValues["opportunitystatecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Status reason of the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunitystatuscode")]
		public virtual OpportunityClose_opportunity_statuscode? OpportunityStatusCode
		{
			get
			{
				return ((OpportunityClose_opportunity_statuscode?)(EntityOptionSetEnum.GetEnum(this, "opportunitystatuscode")));
			}
			set
			{
				this.SetAttributeValue("opportunitystatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunitystatuscodename")]
		public string opportunitystatuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("opportunitystatuscode"))
				{
					return this.FormattedValues["opportunitystatuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// List of optional attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> OptionalAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Person who organized the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Organizer
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the team that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Outsource vendor with which activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partners")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Partners
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("partners");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("partners", value);
				}
				else
				{
					this.SetAttributeValue("partners", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeactivityprocessinguntil")]
		public System.Nullable<System.DateTime> PostponeActivityProcessingUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeactivityprocessinguntil");
			}
		}
		
		/// <summary>
		/// Priority of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual @__opportunityclose_prioritycode? PriorityCode
		{
			get
			{
				return ((@__opportunityclose_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the Process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the object with which the activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("regardingobjectidname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidyominame")]
		public string RegardingObjectIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("regardingobjectidyominame", value);
			}
		}
		
		/// <summary>
		/// List of required attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> RequiredAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Users or facility/equipment that are required for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resources")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> Resources
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("resources");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("resources", value);
				}
				else
				{
					this.SetAttributeValue("resources", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Scheduled duration of the opportunity close activity, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Scheduled end time of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			set
			{
				this.SetAttributeValue("scheduledend", value);
			}
		}
		
		/// <summary>
		/// Scheduled start time of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			set
			{
				this.SetAttributeValue("scheduledstart", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the mailbox associated with the sender of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference SenderMailboxId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxidname")]
		public string SenderMailboxIdName
		{
			get
			{
				if (this.FormattedValues.Contains("sendermailboxid"))
				{
					return this.FormattedValues["sendermailboxid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the activity was sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
		public System.Nullable<System.DateTime> SentOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
			}
		}
		
		/// <summary>
		/// Uniqueidentifier specifying the id of recurring series of an instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
		public System.Nullable<System.Guid> SeriesId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("seriesid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the service with which the opportunity close activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			set
			{
				this.SetAttributeValue("serviceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceidname")]
		public string ServiceIdName
		{
			get
			{
				if (this.FormattedValues.Contains("serviceid"))
				{
					return this.FormattedValues["serviceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the case record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.SetAttributeValue("sortdate", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the Stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the opportunity close activity is open, completed, or canceled.  By default, opportunity close activities are completed unless the opportunity is reactivated,  which updates them to canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual opportunityclose_statecode? StateCode
		{
			get
			{
				return ((opportunityclose_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual opportunityclose_statuscode? StatusCode
		{
			get
			{
				return ((opportunityclose_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Subcategory of the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			set
			{
				this.SetAttributeValue("subcategory", value);
			}
		}
		
		/// <summary>
		/// Subject associated with the opportunity close activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.SetAttributeValue("subject", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Person who is the receiver of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> To
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<DataverseEntities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version number of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N opportunityclose_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunityclose_activity_parties")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> opportunityclose_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityParty>("opportunityclose_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityParty>("opportunityclose_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N OpportunityClose_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OpportunityClose_Annotation")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Annotation> OpportunityClose_Annotation
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Annotation>("OpportunityClose_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Annotation>("OpportunityClose_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N OpportunityClose_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OpportunityClose_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> OpportunityClose_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("OpportunityClose_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("OpportunityClose_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 account_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_OpportunityCloses")]
		public DataverseEntities.Account account_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("account_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("account_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_opportunity_close
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_opportunity_close")]
		public DataverseEntities.ActivityPointer activity_pointer_opportunity_close
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.ActivityPointer>("activity_pointer_opportunity_close", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.ActivityPointer>("activity_pointer_opportunity_close", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_opportunity_close_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_opportunity_close_activities")]
		public DataverseEntities.BusinessUnit business_unit_opportunity_close_activities
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_opportunity_close_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 incident_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_OpportunityCloses")]
		public DataverseEntities.Incident incident_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("incident_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("incident_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lead_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lead_OpportunityCloses")]
		public DataverseEntities.Lead lead_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Lead>("lead_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Lead>("lead_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunityclose_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunityclose_createdby")]
		public DataverseEntities.SystemUser lk_opportunityclose_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunityclose_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunityclose_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunityclose_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_opportunityclose_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunityclose_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunityclose_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunityclose_modifiedby")]
		public DataverseEntities.SystemUser lk_opportunityclose_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunityclose_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunityclose_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunityclose_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_opportunityclose_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunityclose_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 Opportunity_OpportunityClose
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_OpportunityClose")]
		public DataverseEntities.Opportunity Opportunity_OpportunityClose
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Opportunity>("Opportunity_OpportunityClose", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Opportunity>("Opportunity_OpportunityClose", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_OpportunityCloses")]
		public DataverseEntities.Opportunity opportunity_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Opportunity>("opportunity_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Opportunity>("opportunity_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_opportunityclose
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_opportunityclose")]
		public DataverseEntities.Team team_opportunityclose
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_opportunityclose", null);
			}
		}
		
		/// <summary>
		/// N:1 user_opportunityclose
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_opportunityclose")]
		public DataverseEntities.SystemUser user_opportunityclose
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("user_opportunityclose", null);
			}
		}
	}
}
#pragma warning restore CS1591
