#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Indicates the approval options for server-side synchronization or Email Router access.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_emailrouteraccessapproval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Empty = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingApproval = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rejected = 3,
	}
	
	/// <summary>
	/// Incoming email delivery method for the queue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_incomingemaildeliverymethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerSideSynchronizationorEmailRouter = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ForwardMailbox = 3,
	}
	
	/// <summary>
	/// Incoming email filtering method.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_incomingemailfilteringmethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allemailmessages = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailmessagesinresponsetoDynamics365email = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailmessagesfromDynamics365LeadsContactsandAccounts = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailmessagesfromDynamics365recordsthatareemailenabled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noemailmessages = 4,
	}
	
	/// <summary>
	/// Outgoing email delivery method for the queue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_outgoingemaildeliverymethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerSideSynchronizationorEmailRouter = 2,
	}
	
	/// <summary>
	/// Type of queue that is automatically assigned when a user or queue is created. The type can be public, private, or work in process.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_queuetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Select whether the queue is public or private. A public queue can be viewed by all.A private queue can be viewed only by the members added to the queue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_queueviewtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Public = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Private = 1,
	}
	
	/// <summary>
	/// Status of the queue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the queue.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum queue_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
	}
	
	/// <summary>
	/// A list of records that require action, such as accounts, activities, and cases.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("queue")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Queue : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the queue entity
		/// </summary>
		public partial class Fields
		{
			public const string AllowEmailCredentials = "allowemailcredentials";
			public const string AllowEmailCredentialsName = "allowemailcredentialsname";
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DefaultMailbox = "defaultmailbox";
			public const string DefaultMailboxName = "defaultmailboxname";
			public const string Description = "description";
			public const string EMailAddress = "emailaddress";
			public const string EmailPassword = "emailpassword";
			public const string EmailRouterAccessApproval = "emailrouteraccessapproval";
			public const string EmailRouterAccessApprovalName = "emailrouteraccessapprovalname";
			public const string EmailSignature = "emailsignature";
			public const string EmailSignatureName = "emailsignaturename";
			public const string EmailUsername = "emailusername";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeRate = "exchangerate";
			public const string IgnoreUnsolicitedEmail = "ignoreunsolicitedemail";
			public const string IgnoreUnsolicitedEmailName = "ignoreunsolicitedemailname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IncomingEmailDeliveryMethod = "incomingemaildeliverymethod";
			public const string IncomingEmailDeliveryMethodName = "incomingemaildeliverymethodname";
			public const string IncomingEmailFilteringMethod = "incomingemailfilteringmethod";
			public const string IncomingEmailFilteringMethodName = "incomingemailfilteringmethodname";
			public const string IsEmailAddressApprovedByO365Admin = "isemailaddressapprovedbyo365admin";
			public const string IsFaxQueue = "isfaxqueue";
			public const string IsFaxQueueName = "isfaxqueuename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string msdyn_assignmentinputcontractid = "msdyn_assignmentinputcontractid";
			public const string msdyn_assignmentinputcontractidName = "msdyn_assignmentinputcontractidname";
			public const string msdyn_assignmentstrategy = "msdyn_assignmentstrategy";
			public const string msdyn_assignmentstrategyName = "msdyn_assignmentstrategyname";
			public const string msdyn_inqueueoverflowrulesetid = "msdyn_inqueueoverflowrulesetid";
			public const string msdyn_inqueueoverflowrulesetidName = "msdyn_inqueueoverflowrulesetidname";
			public const string msdyn_intentfamilyid = "msdyn_intentfamilyid";
			public const string msdyn_intentfamilyidName = "msdyn_intentfamilyidname";
			public const string msdyn_isdefaultqueue = "msdyn_isdefaultqueue";
			public const string msdyn_isdefaultqueueName = "msdyn_isdefaultqueuename";
			public const string msdyn_isomnichannelqueue = "msdyn_isomnichannelqueue";
			public const string msdyn_isomnichannelqueueName = "msdyn_isomnichannelqueuename";
			public const string msdyn_maxqueuesize = "msdyn_maxqueuesize";
			public const string msdyn_operatinghourid = "msdyn_operatinghourid";
			public const string msdyn_operatinghouridName = "msdyn_operatinghouridname";
			public const string msdyn_operatinghoursbasedassignment = "msdyn_operatinghoursbasedassignment";
			public const string msdyn_operatinghoursbasedassignmentName = "msdyn_operatinghoursbasedassignmentname";
			public const string msdyn_prequeueoverflowrulesetid = "msdyn_prequeueoverflowrulesetid";
			public const string msdyn_prequeueoverflowrulesetidName = "msdyn_prequeueoverflowrulesetidname";
			public const string msdyn_priority = "msdyn_priority";
			public const string msdyn_processqueueperiodically = "msdyn_processqueueperiodically";
			public const string msdyn_processqueueperiodicallyName = "msdyn_processqueueperiodicallyname";
			public const string msdyn_queuetype = "msdyn_queuetype";
			public const string msdyn_queuetypeName = "msdyn_queuetypename";
			public const string msdyn_uniquename = "msdyn_uniquename";
			public const string Name = "name";
			public const string NumberOfItems = "numberofitems";
			public const string NumberOfMembers = "numberofmembers";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OutgoingEmailDeliveryMethod = "outgoingemaildeliverymethod";
			public const string OutgoingEmailDeliveryMethodName = "outgoingemaildeliverymethodname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PrimaryUserId = "primaryuserid";
			public const string PrimaryUserIdName = "primaryuseridname";
			public const string PrimaryUserIdYomiName = "primaryuseridyominame";
			public const string QueueId = "queueid";
			public const string Id = "queueid";
			public const string QueueTypeCode = "queuetypecode";
			public const string QueueTypeCodeName = "queuetypecodename";
			public const string QueueViewType = "queueviewtype";
			public const string QueueViewTypeName = "queueviewtypename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
			public const string email_acceptingentity_queue = "email_acceptingentity_queue";
			public const string queue_activity_parties = "queue_activity_parties";
			public const string Queue_AsyncOperations = "Queue_AsyncOperations";
			public const string Queue_Email_EmailSender = "Queue_Email_EmailSender";
			public const string queue_entries = "queue_entries";
			public const string Queue_ProcessSessions = "Queue_ProcessSessions";
			public const string queue_system_user = "queue_system_user";
			public const string queue_team = "queue_team";
			public const string queuemembership_association = "queuemembership_association";
			public const string business_unit_queues = "business_unit_queues";
			public const string business_unit_queues2 = "business_unit_queues2";
			public const string lk_queue_createdonbehalfby = "lk_queue_createdonbehalfby";
			public const string lk_queue_modifiedonbehalfby = "lk_queue_modifiedonbehalfby";
			public const string lk_queuebase_createdby = "lk_queuebase_createdby";
			public const string lk_queuebase_modifiedby = "lk_queuebase_modifiedby";
			public const string organization_queues = "organization_queues";
			public const string queue_primary_user = "queue_primary_user";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Queue() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "queue";
		
		public const string EntityLogicalCollectionName = "queues";
		
		public const string EntitySetName = "queues";
		
		public const int EntityTypeCode = 2020;
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailcredentials")]
		[System.ObsoleteAttribute()]
		public System.Nullable<bool> AllowEmailCredentials
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowemailcredentials");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailcredentialsname")]
		public string AllowEmailCredentialsName
		{
			get
			{
				if (this.FormattedValues.Contains("allowemailcredentials"))
				{
					return this.FormattedValues["allowemailcredentials"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit with which the queue is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		[System.ObsoleteAttribute()]
		public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
			}
			set
			{
				this.SetAttributeValue("businessunitid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitidname")]
		[System.ObsoleteAttribute()]
		public string BusinessUnitIdName
		{
			get
			{
				if (this.FormattedValues.Contains("businessunitid"))
				{
					return this.FormattedValues["businessunitid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the queue record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the queue was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the mailbox associated with this queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultmailbox")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultMailbox
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultmailbox");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultmailboxname")]
		public string DefaultMailboxName
		{
			get
			{
				if (this.FormattedValues.Contains("defaultmailbox"))
				{
					return this.FormattedValues["defaultmailbox"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Description of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Email address that is associated with the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EMailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.Password attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailpassword")]
		[System.ObsoleteAttribute()]
		public string EmailPassword
		{
			get
			{
				return this.GetAttributeValue<string>("emailpassword");
			}
		}
		
		/// <summary>
		/// Shows the status of the primary email address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapproval")]
		public virtual queue_emailrouteraccessapproval? EmailRouterAccessApproval
		{
			get
			{
				return ((queue_emailrouteraccessapproval?)(EntityOptionSetEnum.GetEnum(this, "emailrouteraccessapproval")));
			}
			set
			{
				this.SetAttributeValue("emailrouteraccessapproval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapprovalname")]
		public string EmailRouterAccessApprovalName
		{
			get
			{
				if (this.FormattedValues.Contains("emailrouteraccessapproval"))
				{
					return this.FormattedValues["emailrouteraccessapproval"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsignature")]
		public Microsoft.Xrm.Sdk.EntityReference EmailSignature
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailsignature");
			}
			set
			{
				this.SetAttributeValue("emailsignature", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsignaturename")]
		public string EmailSignatureName
		{
			get
			{
				if (this.FormattedValues.Contains("emailsignature"))
				{
					return this.FormattedValues["emailsignature"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.UserName attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailusername")]
		[System.ObsoleteAttribute()]
		public string EmailUsername
		{
			get
			{
				return this.GetAttributeValue<string>("emailusername");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the queue with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Information that specifies whether a queue is to ignore unsolicited email (deprecated).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreunsolicitedemail")]
		public System.Nullable<bool> IgnoreUnsolicitedEmail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ignoreunsolicitedemail");
			}
			set
			{
				this.SetAttributeValue("ignoreunsolicitedemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreunsolicitedemailname")]
		public string IgnoreUnsolicitedEmailName
		{
			get
			{
				if (this.FormattedValues.Contains("ignoreunsolicitedemail"))
				{
					return this.FormattedValues["ignoreunsolicitedemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Incoming email delivery method for the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethod")]
		public virtual queue_incomingemaildeliverymethod? IncomingEmailDeliveryMethod
		{
			get
			{
				return ((queue_incomingemaildeliverymethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemaildeliverymethod")));
			}
			set
			{
				this.SetAttributeValue("incomingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethodname")]
		public string IncomingEmailDeliveryMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingemaildeliverymethod"))
				{
					return this.FormattedValues["incomingemaildeliverymethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Convert Incoming Email To Activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailfilteringmethod")]
		public virtual queue_incomingemailfilteringmethod? IncomingEmailFilteringMethod
		{
			get
			{
				return ((queue_incomingemailfilteringmethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemailfilteringmethod")));
			}
			set
			{
				this.SetAttributeValue("incomingemailfilteringmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailfilteringmethodname")]
		public string IncomingEmailFilteringMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingemailfilteringmethod"))
				{
					return this.FormattedValues["incomingemailfilteringmethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the status of approval of the email address by O365 Admin.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailaddressapprovedbyo365admin")]
		public System.Nullable<bool> IsEmailAddressApprovedByO365Admin
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailaddressapprovedbyo365admin");
			}
		}
		
		/// <summary>
		/// Indication of whether a queue is the fax delivery queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfaxqueue")]
		[System.ObsoleteAttribute()]
		public System.Nullable<bool> IsFaxQueue
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfaxqueue");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfaxqueuename")]
		public string IsFaxQueueName
		{
			get
			{
				if (this.FormattedValues.Contains("isfaxqueue"))
				{
					return this.FormattedValues["isfaxqueue"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the queue was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Link assignment input contract with queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_assignmentinputcontractid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_assignmentinputcontractid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_assignmentinputcontractid");
			}
			set
			{
				this.SetAttributeValue("msdyn_assignmentinputcontractid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_assignmentinputcontractidname")]
		public string msdyn_assignmentinputcontractidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_assignmentinputcontractid"))
				{
					return this.FormattedValues["msdyn_assignmentinputcontractid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_assignmentstrategy")]
		public virtual msdyn_queueassignmentstrategy? msdyn_assignmentstrategy
		{
			get
			{
				return ((msdyn_queueassignmentstrategy?)(EntityOptionSetEnum.GetEnum(this, "msdyn_assignmentstrategy")));
			}
			set
			{
				this.SetAttributeValue("msdyn_assignmentstrategy", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_assignmentstrategyname")]
		public string msdyn_assignmentstrategyName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_assignmentstrategy"))
				{
					return this.FormattedValues["msdyn_assignmentstrategy"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Define overflow rules for work items after it enters queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_inqueueoverflowrulesetid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_inqueueoverflowrulesetid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_inqueueoverflowrulesetid");
			}
			set
			{
				this.SetAttributeValue("msdyn_inqueueoverflowrulesetid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_inqueueoverflowrulesetidname")]
		public string msdyn_inqueueoverflowrulesetidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_inqueueoverflowrulesetid"))
				{
					return this.FormattedValues["msdyn_inqueueoverflowrulesetid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_intentfamilyid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_intentfamilyid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_intentfamilyid");
			}
			set
			{
				this.SetAttributeValue("msdyn_intentfamilyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_intentfamilyidname")]
		public string msdyn_intentfamilyidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_intentfamilyid"))
				{
					return this.FormattedValues["msdyn_intentfamilyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows whether the queue is set as default or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isdefaultqueue")]
		public System.Nullable<bool> msdyn_isdefaultqueue
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isdefaultqueue");
			}
			set
			{
				this.SetAttributeValue("msdyn_isdefaultqueue", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isdefaultqueuename")]
		public string msdyn_isdefaultqueueName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_isdefaultqueue"))
				{
					return this.FormattedValues["msdyn_isdefaultqueue"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows whether the queue is used as Omnichannel queue for work distribution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isomnichannelqueue")]
		public System.Nullable<bool> msdyn_isomnichannelqueue
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isomnichannelqueue");
			}
			set
			{
				this.SetAttributeValue("msdyn_isomnichannelqueue", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isomnichannelqueuename")]
		public string msdyn_isomnichannelqueueName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_isomnichannelqueue"))
				{
					return this.FormattedValues["msdyn_isomnichannelqueue"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Maximum queue size
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_maxqueuesize")]
		public System.Nullable<int> msdyn_maxqueuesize
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_maxqueuesize");
			}
			set
			{
				this.SetAttributeValue("msdyn_maxqueuesize", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Operating hour associated with Queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_operatinghourid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_operatinghourid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_operatinghourid");
			}
			set
			{
				this.SetAttributeValue("msdyn_operatinghourid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_operatinghouridname")]
		public string msdyn_operatinghouridName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_operatinghourid"))
				{
					return this.FormattedValues["msdyn_operatinghourid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Setting to enable/disable periodic processing of a queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_operatinghoursbasedassignment")]
		public System.Nullable<bool> msdyn_operatinghoursbasedassignment
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_operatinghoursbasedassignment");
			}
			set
			{
				this.SetAttributeValue("msdyn_operatinghoursbasedassignment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_operatinghoursbasedassignmentname")]
		public string msdyn_operatinghoursbasedassignmentName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_operatinghoursbasedassignment"))
				{
					return this.FormattedValues["msdyn_operatinghoursbasedassignment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Define overflow rules for work items before it enters queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_prequeueoverflowrulesetid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_prequeueoverflowrulesetid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_prequeueoverflowrulesetid");
			}
			set
			{
				this.SetAttributeValue("msdyn_prequeueoverflowrulesetid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_prequeueoverflowrulesetidname")]
		public string msdyn_prequeueoverflowrulesetidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_prequeueoverflowrulesetid"))
				{
					return this.FormattedValues["msdyn_prequeueoverflowrulesetid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Priority of the queue to indicate conversation assignment order to the agent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_priority")]
		public System.Nullable<int> msdyn_priority
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_priority");
			}
			set
			{
				this.SetAttributeValue("msdyn_priority", value);
			}
		}
		
		/// <summary>
		/// Setting to enable/disable periodic processing of a queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_processqueueperiodically")]
		public System.Nullable<bool> msdyn_processqueueperiodically
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_processqueueperiodically");
			}
			set
			{
				this.SetAttributeValue("msdyn_processqueueperiodically", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_processqueueperiodicallyname")]
		public string msdyn_processqueueperiodicallyName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_processqueueperiodically"))
				{
					return this.FormattedValues["msdyn_processqueueperiodically"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Defines the type of channels handled by this queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_queuetype")]
		public virtual msdyn_queuetype? msdyn_queuetype
		{
			get
			{
				return ((msdyn_queuetype?)(EntityOptionSetEnum.GetEnum(this, "msdyn_queuetype")));
			}
			set
			{
				this.SetAttributeValue("msdyn_queuetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_queuetypename")]
		public string msdyn_queuetypeName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_queuetype"))
				{
					return this.FormattedValues["msdyn_queuetype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique Name for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_uniquename")]
		public string msdyn_uniquename
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_uniquename");
			}
			set
			{
				this.SetAttributeValue("msdyn_uniquename", value);
			}
		}
		
		/// <summary>
		/// Name of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Number of Queue items associated with the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofitems")]
		public System.Nullable<int> NumberOfItems
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofitems");
			}
		}
		
		/// <summary>
		/// Number of Members associated with the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofmembers")]
		public System.Nullable<int> NumberOfMembers
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofmembers");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Outgoing email delivery method for the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethod")]
		public virtual queue_outgoingemaildeliverymethod? OutgoingEmailDeliveryMethod
		{
			get
			{
				return ((queue_outgoingemaildeliverymethod?)(EntityOptionSetEnum.GetEnum(this, "outgoingemaildeliverymethod")));
			}
			set
			{
				this.SetAttributeValue("outgoingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethodname")]
		public string OutgoingEmailDeliveryMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingemaildeliverymethod"))
				{
					return this.FormattedValues["outgoingemaildeliverymethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the owner of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryuserid")]
		[System.ObsoleteAttribute()]
		public Microsoft.Xrm.Sdk.EntityReference PrimaryUserId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primaryuserid");
			}
			set
			{
				this.SetAttributeValue("primaryuserid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryuseridname")]
		[System.ObsoleteAttribute()]
		public string PrimaryUserIdName
		{
			get
			{
				if (this.FormattedValues.Contains("primaryuserid"))
				{
					return this.FormattedValues["primaryuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryuseridyominame")]
		[System.ObsoleteAttribute()]
		public string PrimaryUserIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("primaryuserid"))
				{
					return this.FormattedValues["primaryuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		public System.Nullable<System.Guid> QueueId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("queueid");
			}
			set
			{
				this.SetAttributeValue("queueid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.QueueId = value;
			}
		}
		
		/// <summary>
		/// Type of queue that is automatically assigned when a user or queue is created. The type can be public, private, or work in process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queuetypecode")]
		public virtual queue_queuetypecode? QueueTypeCode
		{
			get
			{
				return ((queue_queuetypecode?)(EntityOptionSetEnum.GetEnum(this, "queuetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queuetypecodename")]
		public string QueueTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("queuetypecode"))
				{
					return this.FormattedValues["queuetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the queue is public or private. A public queue can be viewed by all. A private queue can be viewed only by the members added to the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueviewtype")]
		public virtual queue_queueviewtype? QueueViewType
		{
			get
			{
				return ((queue_queueviewtype?)(EntityOptionSetEnum.GetEnum(this, "queueviewtype")));
			}
			set
			{
				this.SetAttributeValue("queueviewtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueviewtypename")]
		public string QueueViewTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("queueviewtype"))
				{
					return this.FormattedValues["queueviewtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Status of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual queue_statecode? StateCode
		{
			get
			{
				return ((queue_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual queue_statuscode? StatusCode
		{
			get
			{
				return ((queue_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Version number of the queue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N email_acceptingentity_queue
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_acceptingentity_queue")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Email> email_acceptingentity_queue
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Email>("email_acceptingentity_queue", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Email>("email_acceptingentity_queue", null, value);
			}
		}
		
		/// <summary>
		/// 1:N queue_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_activity_parties")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> queue_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityParty>("queue_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityParty>("queue_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Queue_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Queue_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> Queue_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("Queue_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("Queue_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Queue_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Queue_Email_EmailSender")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Email> Queue_Email_EmailSender
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Email>("Queue_Email_EmailSender", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Email>("Queue_Email_EmailSender", null, value);
			}
		}
		
		/// <summary>
		/// 1:N queue_entries
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_entries")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.QueueItem> queue_entries
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.QueueItem>("queue_entries", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.QueueItem>("queue_entries", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Queue_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Queue_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> Queue_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("Queue_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("Queue_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N queue_system_user
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_system_user")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.SystemUser> queue_system_user
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.SystemUser>("queue_system_user", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.SystemUser>("queue_system_user", null, value);
			}
		}
		
		/// <summary>
		/// 1:N queue_team
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_team")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Team> queue_team
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Team>("queue_team", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Team>("queue_team", null, value);
			}
		}
		
		/// <summary>
		/// N:N queuemembership_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queuemembership_association")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.SystemUser> queuemembership_association
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.SystemUser>("queuemembership_association", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.SystemUser>("queuemembership_association", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_queues
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_queues")]
		public DataverseEntities.BusinessUnit business_unit_queues
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_queues", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_queues", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_queues2
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_queues2")]
		public DataverseEntities.BusinessUnit business_unit_queues2
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_queues2", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_queue_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_queue_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_queue_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_queue_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_queue_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_queue_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_queue_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_queue_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_queuebase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_queuebase_createdby")]
		public DataverseEntities.SystemUser lk_queuebase_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_queuebase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_queuebase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_queuebase_modifiedby")]
		public DataverseEntities.SystemUser lk_queuebase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_queuebase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_queues
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_queues")]
		public DataverseEntities.Organization organization_queues
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Organization>("organization_queues", null);
			}
		}
		
		/// <summary>
		/// N:1 queue_primary_user
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryuserid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_primary_user")]
		public DataverseEntities.SystemUser queue_primary_user
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("queue_primary_user", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.SystemUser>("queue_primary_user", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
