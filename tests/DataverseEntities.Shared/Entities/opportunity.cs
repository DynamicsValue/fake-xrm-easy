#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Categories used for forecasting.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum msdyn_opportunity_msdyn_forecastcategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipeline = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bestcase = 100000002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Committed = 100000003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Omitted = 100000004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 100000005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lost = 100000006,
	}
	
	/// <summary>
	/// Quality of the opportunity, such as hot.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_opportunityratingcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Warm = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cold = 3,
	}
	
	/// <summary>
	/// Priority of the opportunity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Customizable code that represents the current stage of an opportunity in a manual sales process. Designed to support manual sales processes upgraded from earlier versions of Microsoft Dynamics 365.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_salesstagecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Status of the opportunity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lost = 2,
	}
	
	/// <summary>
	/// Reason for the status of the opportunity.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutSold = 5,
	}
	
	/// <summary>
	/// Timeline
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_timeline
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Immediate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThisQuarter = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NextQuarter = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThisYear = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Notknown = 4,
	}
	
	/// <summary>
	/// Potential revenue-generating event, or sale to an account, which needs to be tracked through a sales process to completion.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("opportunity")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Opportunity : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the opportunity entity
		/// </summary>
		public partial class Fields
		{
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActualCloseDate = "actualclosedate";
			public const string ActualValue = "actualvalue";
			public const string ActualValue_Base = "actualvalue_base";
			public const string BudgetAmount = "budgetamount";
			public const string BudgetAmount_Base = "budgetamount_base";
			public const string BudgetStatus = "budgetstatus";
			public const string BudgetTypeName = "budgettypename";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string CaptureProposalFeedback = "captureproposalfeedback";
			public const string CaptureProposalFeedbackName = "captureproposalfeedbackname";
			public const string CloseProbability = "closeprobability";
			public const string CompleteFinalProposal = "completefinalproposal";
			public const string CompleteFinalProposalName = "completefinalproposalname";
			public const string CompleteInternalReview = "completeinternalreview";
			public const string CompleteInternalReviewName = "completeinternalreviewname";
			public const string ConfirmInterest = "confirminterest";
			public const string ConfirmInterestName = "confirminterestname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrentSituation = "currentsituation";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerNeed = "customerneed";
			public const string CustomerPainPoints = "customerpainpoints";
			public const string DecisionMaker = "decisionmaker";
			public const string DecisionMakerName = "decisionmakername";
			public const string Description = "description";
			public const string DevelopProposal = "developproposal";
			public const string DevelopProposalName = "developproposalname";
			public const string DiscountAmount = "discountamount";
			public const string DiscountAmount_Base = "discountamount_base";
			public const string DiscountPercentage = "discountpercentage";
			public const string EmailAddress = "emailaddress";
			public const string EstimatedCloseDate = "estimatedclosedate";
			public const string EstimatedValue = "estimatedvalue";
			public const string EstimatedValue_Base = "estimatedvalue_base";
			public const string EvaluateFit = "evaluatefit";
			public const string EvaluateFitName = "evaluatefitname";
			public const string ExchangeRate = "exchangerate";
			public const string FileDebrief = "filedebrief";
			public const string FileDeBriefName = "filedebriefname";
			public const string FinalDecisionDate = "finaldecisiondate";
			public const string FreightAmount = "freightamount";
			public const string FreightAmount_Base = "freightamount_base";
			public const string IdentifyCompetitors = "identifycompetitors";
			public const string IdentifyCompetitorsName = "identifycompetitorsname";
			public const string IdentifyCustomerContacts = "identifycustomercontacts";
			public const string IdentifyCustomerContactsName = "identifycustomercontactsname";
			public const string IdentifyPursuitTeam = "identifypursuitteam";
			public const string IdentifyPursuitTeamName = "identifypursuitteamname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialCommunication = "initialcommunication";
			public const string InitialCommunicationName = "initialcommunicationname";
			public const string IsPrivateName = "isprivatename";
			public const string IsRevenueSystemCalculated = "isrevenuesystemcalculated";
			public const string IsRevenueSystemCalculatedName = "isrevenuesystemcalculatedname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string msdyn_forecastcategory = "msdyn_forecastcategory";
			public const string msdyn_forecastcategoryName = "msdyn_forecastcategoryname";
			public const string msdyn_gdproptout = "msdyn_gdproptout";
			public const string msdyn_gdproptoutName = "msdyn_gdproptoutname";
			public const string msdyn_OpportunityGrade = "msdyn_opportunitygrade";
			public const string msdyn_opportunitygradeName = "msdyn_opportunitygradename";
			public const string msdyn_opportunitykpiid = "msdyn_opportunitykpiid";
			public const string msdyn_opportunitykpiidName = "msdyn_opportunitykpiidname";
			public const string msdyn_OpportunityScore = "msdyn_opportunityscore";
			public const string msdyn_OpportunityScoreTrend = "msdyn_opportunityscoretrend";
			public const string msdyn_opportunityscoretrendName = "msdyn_opportunityscoretrendname";
			public const string msdyn_PredictiveScoreId = "msdyn_predictivescoreid";
			public const string msdyn_PredictiveScoreIdName = "msdyn_predictivescoreidname";
			public const string msdyn_ScoreHistory = "msdyn_scorehistory";
			public const string msdyn_ScoreReasons = "msdyn_scorereasons";
			public const string msdyn_segmentid = "msdyn_segmentid";
			public const string msdyn_segmentidName = "msdyn_segmentidname";
			public const string msdyn_similaropportunities = "msdyn_similaropportunities";
			public const string Name = "name";
			public const string Need = "need";
			public const string NeedName = "needname";
			public const string OnHoldTime = "onholdtime";
			public const string OpportunityId = "opportunityid";
			public const string Id = "opportunityid";
			public const string OpportunityRatingCode = "opportunityratingcode";
			public const string OpportunityRatingCodeName = "opportunityratingcodename";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PresentFinalProposal = "presentfinalproposal";
			public const string PresentFinalProposalName = "presentfinalproposalname";
			public const string PresentProposal = "presentproposal";
			public const string PresentProposalName = "presentproposalname";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string ProposedSolution = "proposedsolution";
			public const string PurchaseProcess = "purchaseprocess";
			public const string PurchaseProcessName = "purchaseprocessname";
			public const string PurchaseTimeframe = "purchasetimeframe";
			public const string PurchaseTimeframeName = "purchasetimeframename";
			public const string PursuitDecision = "pursuitdecision";
			public const string PursuitDecisionName = "pursuitdecisionname";
			public const string QualificationComments = "qualificationcomments";
			public const string QuoteComments = "quotecomments";
			public const string ResolveFeedback = "resolvefeedback";
			public const string ResolveFeedbackName = "resolvefeedbackname";
			public const string SalesStage = "salesstage";
			public const string SalesStageCode = "salesstagecode";
			public const string SalesStageCodeName = "salesstagecodename";
			public const string SalesStageName = "salesstagename";
			public const string ScheduleFollowup_Prospect = "schedulefollowup_prospect";
			public const string ScheduleFollowup_Qualify = "schedulefollowup_qualify";
			public const string ScheduleProposalMeeting = "scheduleproposalmeeting";
			public const string SendThankYouNote = "sendthankyounote";
			public const string SendThankYouNoteName = "sendthankyounotename";
			public const string SkipPriceCalculation = "skippricecalculation";
			public const string skippricecalculationName = "skippricecalculationname";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string StepId = "stepid";
			public const string StepName = "stepname";
			public const string TeamsFollowed = "teamsfollowed";
			public const string TimeLine = "timeline";
			public const string TimelineName = "timelinename";
			public const string TimeSpentByMeOnEmailAndMeetings = "timespentbymeonemailandmeetings";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmount_Base = "totalamount_base";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalAmountLessFreight_Base = "totalamountlessfreight_base";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalDiscountAmount_Base = "totaldiscountamount_base";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemAmount_Base = "totallineitemamount_base";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";
			public const string TotalTax = "totaltax";
			public const string TotalTax_Base = "totaltax_base";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string lead_qualifying_opportunity = "lead_qualifying_opportunity";
			public const string opportunity_activity_parties = "opportunity_activity_parties";
			public const string Opportunity_ActivityPointers = "Opportunity_ActivityPointers";
			public const string Opportunity_Annotation = "Opportunity_Annotation";
			public const string Opportunity_AsyncOperations = "Opportunity_AsyncOperations";
			public const string opportunity_connections1 = "opportunity_connections1";
			public const string opportunity_connections2 = "opportunity_connections2";
			public const string Opportunity_Emails = "Opportunity_Emails";
			public const string Opportunity_Faxes = "Opportunity_Faxes";
			public const string Opportunity_OpportunityClose = "Opportunity_OpportunityClose";
			public const string opportunity_OpportunityCloses = "opportunity_OpportunityCloses";
			public const string Opportunity_Phonecalls = "Opportunity_Phonecalls";
			public const string Opportunity_ProcessSessions = "Opportunity_ProcessSessions";
			public const string opportunity_quotes = "opportunity_quotes";
			public const string Opportunity_Tasks = "Opportunity_Tasks";
			public const string opportunity_Teams = "opportunity_Teams";
			public const string business_unit_opportunities = "business_unit_opportunities";
			public const string lk_opportunity_createdonbehalfby = "lk_opportunity_createdonbehalfby";
			public const string lk_opportunity_modifiedonbehalfby = "lk_opportunity_modifiedonbehalfby";
			public const string lk_opportunitybase_createdby = "lk_opportunitybase_createdby";
			public const string lk_opportunitybase_modifiedby = "lk_opportunitybase_modifiedby";
			public const string opportunity_customer_accounts = "opportunity_customer_accounts";
			public const string opportunity_customer_contacts = "opportunity_customer_contacts";
			public const string opportunity_originating_lead = "opportunity_originating_lead";
			public const string opportunity_owning_user = "opportunity_owning_user";
			public const string opportunity_parent_account = "opportunity_parent_account";
			public const string opportunity_parent_contact = "opportunity_parent_contact";
			public const string processstage_opportunity = "processstage_opportunity";
			public const string team_opportunities = "team_opportunities";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Opportunity() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "opportunity";
		
		public const string EntityLogicalCollectionName = "opportunities";
		
		public const string EntitySetName = "opportunities";
		
		public const int EntityTypeCode = 3;
		
		/// <summary>
		/// Internal attribute for storing customerid. Do not use this attribute directly; use parentaccountid instead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
		public string AccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
		public string AccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the opportunity was closed or canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualclosedate")]
		public System.Nullable<System.DateTime> ActualCloseDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualclosedate");
			}
			set
			{
				this.SetAttributeValue("actualclosedate", value);
			}
		}
		
		/// <summary>
		/// Type the actual revenue amount for the opportunity for reporting and analysis of estimated versus actual sales. Field defaults to the Est. Revenue value when an opportunity is won.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualvalue")]
		public Microsoft.Xrm.Sdk.Money ActualValue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualvalue");
			}
			set
			{
				this.SetAttributeValue("actualvalue", value);
			}
		}
		
		/// <summary>
		/// Value of the Actual Revenue in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualvalue_base")]
		public Microsoft.Xrm.Sdk.Money ActualValue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualvalue_base");
			}
		}
		
		/// <summary>
		/// Type a value between 0 and 1,000,000,000,000 to indicate the lead's potential available budget.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetamount")]
		public Microsoft.Xrm.Sdk.Money BudgetAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetamount");
			}
			set
			{
				this.SetAttributeValue("budgetamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Budget Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetamount_base")]
		public Microsoft.Xrm.Sdk.Money BudgetAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetamount_base");
			}
		}
		
		/// <summary>
		/// Select the likely budget status for the lead's company. This may help determine the lead rating or your sales approach.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetstatus")]
		public virtual budgetstatus? BudgetStatus
		{
			get
			{
				return ((budgetstatus?)(EntityOptionSetEnum.GetEnum(this, "budgetstatus")));
			}
			set
			{
				this.SetAttributeValue("budgetstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgettypename")]
		public string BudgetTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("budgetstatus"))
				{
					return this.FormattedValues["budgetstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the campaign that the opportunity was created from. The ID is used for tracking the success of the campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("campaignid")]
		public Microsoft.Xrm.Sdk.EntityReference CampaignId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("campaignid");
			}
			set
			{
				this.SetAttributeValue("campaignid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("campaignidname")]
		public string CampaignIdName
		{
			get
			{
				if (this.FormattedValues.Contains("campaignid"))
				{
					return this.FormattedValues["campaignid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose whether the proposal feedback has been captured for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("captureproposalfeedback")]
		public System.Nullable<bool> CaptureProposalFeedback
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("captureproposalfeedback");
			}
			set
			{
				this.SetAttributeValue("captureproposalfeedback", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("captureproposalfeedbackname")]
		public string CaptureProposalFeedbackName
		{
			get
			{
				if (this.FormattedValues.Contains("captureproposalfeedback"))
				{
					return this.FormattedValues["captureproposalfeedback"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type a number from 0 to 100 that represents the likelihood of closing the opportunity. This can aid the sales team in their efforts to convert the opportunity in a sale.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("closeprobability")]
		public System.Nullable<int> CloseProbability
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("closeprobability");
			}
			set
			{
				this.SetAttributeValue("closeprobability", value);
			}
		}
		
		/// <summary>
		/// Select whether a final proposal has been completed for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completefinalproposal")]
		public System.Nullable<bool> CompleteFinalProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("completefinalproposal");
			}
			set
			{
				this.SetAttributeValue("completefinalproposal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completefinalproposalname")]
		public string CompleteFinalProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("completefinalproposal"))
				{
					return this.FormattedValues["completefinalproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether an internal review has been completed for this opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completeinternalreview")]
		public System.Nullable<bool> CompleteInternalReview
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("completeinternalreview");
			}
			set
			{
				this.SetAttributeValue("completeinternalreview", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completeinternalreviewname")]
		public string CompleteInternalReviewName
		{
			get
			{
				if (this.FormattedValues.Contains("completeinternalreview"))
				{
					return this.FormattedValues["completeinternalreview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality and the probability of it turning into an opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("confirminterest")]
		public System.Nullable<bool> ConfirmInterest
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("confirminterest");
			}
			set
			{
				this.SetAttributeValue("confirminterest", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("confirminterestname")]
		public string ConfirmInterestName
		{
			get
			{
				if (this.FormattedValues.Contains("confirminterest"))
				{
					return this.FormattedValues["confirminterest"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Internal attribute for storing customerid. Do not use this attribute directly; use parentcontactid instead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidname")]
		public string ContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidyominame")]
		public string ContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type notes about the company or organization associated with the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentsituation")]
		public string CurrentSituation
		{
			get
			{
				return this.GetAttributeValue<string>("currentsituation");
			}
			set
			{
				this.SetAttributeValue("currentsituation", value);
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.SetAttributeValue("customerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridname")]
		public string CustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridyominame")]
		public string CustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type some notes about the customer's requirements, to help the sales team identify products and services that could meet their requirements.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerneed")]
		public string CustomerNeed
		{
			get
			{
				return this.GetAttributeValue<string>("customerneed");
			}
			set
			{
				this.SetAttributeValue("customerneed", value);
			}
		}
		
		/// <summary>
		/// Type notes about the customer's pain points to help the sales team identify products and services that could address these pain points.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerpainpoints")]
		public string CustomerPainPoints
		{
			get
			{
				return this.GetAttributeValue<string>("customerpainpoints");
			}
			set
			{
				this.SetAttributeValue("customerpainpoints", value);
			}
		}
		
		/// <summary>
		/// Select whether your notes include information about who makes the purchase decisions at the lead's company.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decisionmaker")]
		public System.Nullable<bool> DecisionMaker
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("decisionmaker");
			}
			set
			{
				this.SetAttributeValue("decisionmaker", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decisionmakername")]
		public string DecisionMakerName
		{
			get
			{
				if (this.FormattedValues.Contains("decisionmaker"))
				{
					return this.FormattedValues["decisionmaker"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type additional information to describe the opportunity, such as possible products to sell or past purchases from the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Select whether a proposal has been developed for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("developproposal")]
		public System.Nullable<bool> DevelopProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("developproposal");
			}
			set
			{
				this.SetAttributeValue("developproposal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("developproposalname")]
		public string DevelopProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("developproposal"))
				{
					return this.FormattedValues["developproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the discount amount for the opportunity if the customer is eligible for special savings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountamount")]
		public Microsoft.Xrm.Sdk.Money DiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discountamount");
			}
			set
			{
				this.SetAttributeValue("discountamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Opportunity Discount Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountamount_base")]
		public Microsoft.Xrm.Sdk.Money DiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discountamount_base");
			}
		}
		
		/// <summary>
		/// Type the discount rate that should be applied to the Product Totals field to include additional savings for the customer in the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountpercentage")]
		public System.Nullable<decimal> DiscountPercentage
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("discountpercentage");
			}
			set
			{
				this.SetAttributeValue("discountpercentage", value);
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// Enter the expected closing date of the opportunity to help make accurate revenue forecasts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedclosedate")]
		public System.Nullable<System.DateTime> EstimatedCloseDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("estimatedclosedate");
			}
			set
			{
				this.SetAttributeValue("estimatedclosedate", value);
			}
		}
		
		/// <summary>
		/// Type the estimated revenue amount to indicate the potential sale or value of the opportunity for revenue forecasting. This field can be either system-populated or editable based on the selection in the Revenue field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedvalue")]
		public Microsoft.Xrm.Sdk.Money EstimatedValue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("estimatedvalue");
			}
			set
			{
				this.SetAttributeValue("estimatedvalue", value);
			}
		}
		
		/// <summary>
		/// Value of the Est. Revenue in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedvalue_base")]
		public Microsoft.Xrm.Sdk.Money EstimatedValue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("estimatedvalue_base");
			}
		}
		
		/// <summary>
		/// Select whether the fit between the lead's requirements and your offerings was evaluated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("evaluatefit")]
		public System.Nullable<bool> EvaluateFit
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("evaluatefit");
			}
			set
			{
				this.SetAttributeValue("evaluatefit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("evaluatefitname")]
		public string EvaluateFitName
		{
			get
			{
				if (this.FormattedValues.Contains("evaluatefit"))
				{
					return this.FormattedValues["evaluatefit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Choose whether the sales team has recorded detailed notes on the proposals and the account's responses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filedebrief")]
		public System.Nullable<bool> FileDebrief
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("filedebrief");
			}
			set
			{
				this.SetAttributeValue("filedebrief", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filedebriefname")]
		public string FileDeBriefName
		{
			get
			{
				if (this.FormattedValues.Contains("filedebrief"))
				{
					return this.FormattedValues["filedebrief"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the date and time when the final decision of the opportunity was made.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("finaldecisiondate")]
		public System.Nullable<System.DateTime> FinalDecisionDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("finaldecisiondate");
			}
			set
			{
				this.SetAttributeValue("finaldecisiondate", value);
			}
		}
		
		/// <summary>
		/// Type the cost of freight or shipping for the products included in the opportunity for use in calculating the Total Amount field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("freightamount")]
		public Microsoft.Xrm.Sdk.Money FreightAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("freightamount");
			}
			set
			{
				this.SetAttributeValue("freightamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Freight Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("freightamount_base")]
		public Microsoft.Xrm.Sdk.Money FreightAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("freightamount_base");
			}
		}
		
		/// <summary>
		/// Select whether information about competitors is included.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycompetitors")]
		public System.Nullable<bool> IdentifyCompetitors
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifycompetitors");
			}
			set
			{
				this.SetAttributeValue("identifycompetitors", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycompetitorsname")]
		public string IdentifyCompetitorsName
		{
			get
			{
				if (this.FormattedValues.Contains("identifycompetitors"))
				{
					return this.FormattedValues["identifycompetitors"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the customer contacts for this opportunity have been identified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycustomercontacts")]
		public System.Nullable<bool> IdentifyCustomerContacts
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifycustomercontacts");
			}
			set
			{
				this.SetAttributeValue("identifycustomercontacts", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycustomercontactsname")]
		public string IdentifyCustomerContactsName
		{
			get
			{
				if (this.FormattedValues.Contains("identifycustomercontacts"))
				{
					return this.FormattedValues["identifycustomercontacts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose whether you have recorded who will pursue the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifypursuitteam")]
		public System.Nullable<bool> IdentifyPursuitTeam
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifypursuitteam");
			}
			set
			{
				this.SetAttributeValue("identifypursuitteam", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifypursuitteamname")]
		public string IdentifyPursuitTeamName
		{
			get
			{
				if (this.FormattedValues.Contains("identifypursuitteam"))
				{
					return this.FormattedValues["identifypursuitteam"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Choose whether someone from the sales team contacted this lead earlier.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialcommunication")]
		public virtual initialcommunication? InitialCommunication
		{
			get
			{
				return ((initialcommunication?)(EntityOptionSetEnum.GetEnum(this, "initialcommunication")));
			}
			set
			{
				this.SetAttributeValue("initialcommunication", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialcommunicationname")]
		public string InitialCommunicationName
		{
			get
			{
				if (this.FormattedValues.Contains("initialcommunication"))
				{
					return this.FormattedValues["initialcommunication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string IsPrivateName
		{
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the estimated revenue for the opportunity is calculated automatically based on the products entered or entered manually by a user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrevenuesystemcalculated")]
		public System.Nullable<bool> IsRevenueSystemCalculated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isrevenuesystemcalculated");
			}
			set
			{
				this.SetAttributeValue("isrevenuesystemcalculated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrevenuesystemcalculatedname")]
		public string IsRevenueSystemCalculatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isrevenuesystemcalculated"))
				{
					return this.FormattedValues["isrevenuesystemcalculated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the date time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Categories used for forecasting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_forecastcategory")]
		public virtual msdyn_opportunity_msdyn_forecastcategory? msdyn_forecastcategory
		{
			get
			{
				return ((msdyn_opportunity_msdyn_forecastcategory?)(EntityOptionSetEnum.GetEnum(this, "msdyn_forecastcategory")));
			}
			set
			{
				this.SetAttributeValue("msdyn_forecastcategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_forecastcategoryname")]
		public string msdyn_forecastcategoryName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_forecastcategory"))
				{
					return this.FormattedValues["msdyn_forecastcategory"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Describes whether opportunity is opted out or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> msdyn_gdproptout
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			set
			{
				this.SetAttributeValue("msdyn_gdproptout", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
		public string msdyn_gdproptoutName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_gdproptout"))
				{
					return this.FormattedValues["msdyn_gdproptout"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitygrade")]
		public virtual msdyn_opportunitygradeoptset? msdyn_OpportunityGrade
		{
			get
			{
				return ((msdyn_opportunitygradeoptset?)(EntityOptionSetEnum.GetEnum(this, "msdyn_opportunitygrade")));
			}
			set
			{
				this.SetAttributeValue("msdyn_opportunitygrade", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitygradename")]
		public string msdyn_opportunitygradeName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunitygrade"))
				{
					return this.FormattedValues["msdyn_opportunitygrade"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Maps to opportunity KPI records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_opportunitykpiid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_opportunitykpiid");
			}
			set
			{
				this.SetAttributeValue("msdyn_opportunitykpiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitykpiidname")]
		public string msdyn_opportunitykpiidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunitykpiid"))
				{
					return this.FormattedValues["msdyn_opportunitykpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscore")]
		public System.Nullable<int> msdyn_OpportunityScore
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_opportunityscore");
			}
			set
			{
				this.SetAttributeValue("msdyn_opportunityscore", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscoretrend")]
		public virtual msdyn_opportunityscoretrendoptset? msdyn_OpportunityScoreTrend
		{
			get
			{
				return ((msdyn_opportunityscoretrendoptset?)(EntityOptionSetEnum.GetEnum(this, "msdyn_opportunityscoretrend")));
			}
			set
			{
				this.SetAttributeValue("msdyn_opportunityscoretrend", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscoretrendname")]
		public string msdyn_opportunityscoretrendName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunityscoretrend"))
				{
					return this.FormattedValues["msdyn_opportunityscoretrend"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Predictive score
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_predictivescoreid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_PredictiveScoreId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_predictivescoreid");
			}
			set
			{
				this.SetAttributeValue("msdyn_predictivescoreid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_predictivescoreidname")]
		public string msdyn_PredictiveScoreIdName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_predictivescoreid"))
				{
					return this.FormattedValues["msdyn_predictivescoreid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scorehistory")]
		public string msdyn_ScoreHistory
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_scorehistory");
			}
			set
			{
				this.SetAttributeValue("msdyn_scorehistory", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scorereasons")]
		public string msdyn_ScoreReasons
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_scorereasons");
			}
			set
			{
				this.SetAttributeValue("msdyn_scorereasons", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Segment associated with Opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			set
			{
				this.SetAttributeValue("msdyn_segmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
		public string msdyn_segmentidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_segmentid"))
				{
					return this.FormattedValues["msdyn_segmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_similaropportunities")]
		public string msdyn_similaropportunities
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_similaropportunities");
			}
			set
			{
				this.SetAttributeValue("msdyn_similaropportunities", value);
			}
		}
		
		/// <summary>
		/// Type a subject or descriptive name, such as the expected order or company name, for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Choose how high the level of need is for the lead's company.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("need")]
		public virtual need? Need
		{
			get
			{
				return ((need?)(EntityOptionSetEnum.GetEnum(this, "need")));
			}
			set
			{
				this.SetAttributeValue("need", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("needname")]
		public string NeedName
		{
			get
			{
				if (this.FormattedValues.Contains("need"))
				{
					return this.FormattedValues["need"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the duration in minutes for which the opportunity was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		public System.Nullable<System.Guid> OpportunityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("opportunityid");
			}
			set
			{
				this.SetAttributeValue("opportunityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.OpportunityId = value;
			}
		}
		
		/// <summary>
		/// Select the expected value or priority of the opportunity based on revenue, customer status, or closing probability.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityratingcode")]
		public virtual opportunity_opportunityratingcode? OpportunityRatingCode
		{
			get
			{
				return ((opportunity_opportunityratingcode?)(EntityOptionSetEnum.GetEnum(this, "opportunityratingcode")));
			}
			set
			{
				this.SetAttributeValue("opportunityratingcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityratingcodename")]
		public string OpportunityRatingCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("opportunityratingcode"))
				{
					return this.FormattedValues["opportunityratingcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the lead that the opportunity was created from for reporting and analytics. The field is read-only after the opportunity is created and defaults to the correct lead when an opportunity is created from a converted lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			set
			{
				this.SetAttributeValue("originatingleadid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
		public string OriginatingLeadIdName
		{
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
		public string OriginatingLeadIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose an account to connect this opportunity to, so that the relationship is visible in reports and analytics, and to provide a quick link to additional details, such as financial information and activities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentAccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentaccountid");
			}
			set
			{
				this.SetAttributeValue("parentaccountid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidname")]
		public string ParentAccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidyominame")]
		public string ParentAccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose a contact to connect this opportunity to, so that the relationship is visible in reports and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
			}
			set
			{
				this.SetAttributeValue("parentcontactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidname")]
		public string ParentContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidyominame")]
		public string ParentContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether the opportunity participates in workflow rules.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> ParticipatesInWorkflow
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			set
			{
				this.SetAttributeValue("participatesinworkflow", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
		public string ParticipatesInWorkflowName
		{
			get
			{
				if (this.FormattedValues.Contains("participatesinworkflow"))
				{
					return this.FormattedValues["participatesinworkflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the final proposal has been presented to the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentfinalproposal")]
		public System.Nullable<bool> PresentFinalProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("presentfinalproposal");
			}
			set
			{
				this.SetAttributeValue("presentfinalproposal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentfinalproposalname")]
		public string PresentFinalProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("presentfinalproposal"))
				{
					return this.FormattedValues["presentfinalproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether a proposal for the opportunity has been presented to the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentproposal")]
		public System.Nullable<bool> PresentProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("presentproposal");
			}
			set
			{
				this.SetAttributeValue("presentproposal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentproposalname")]
		public string PresentProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("presentproposal"))
				{
					return this.FormattedValues["presentproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference PriceLevelId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("pricelevelid");
			}
			set
			{
				this.SetAttributeValue("pricelevelid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricelevelidname")]
		public string PriceLevelIdName
		{
			get
			{
				if (this.FormattedValues.Contains("pricelevelid"))
				{
					return this.FormattedValues["pricelevelid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Pricing error for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingerrorcode")]
		public virtual qooi_pricingerrorcode? PricingErrorCode
		{
			get
			{
				return ((qooi_pricingerrorcode?)(EntityOptionSetEnum.GetEnum(this, "pricingerrorcode")));
			}
			set
			{
				this.SetAttributeValue("pricingerrorcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingerrorcodename")]
		public string PricingErrorCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("pricingerrorcode"))
				{
					return this.FormattedValues["pricingerrorcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual opportunity_prioritycode? PriorityCode
		{
			get
			{
				return ((opportunity_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Type notes about the proposed solution for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("proposedsolution")]
		public string ProposedSolution
		{
			get
			{
				return this.GetAttributeValue<string>("proposedsolution");
			}
			set
			{
				this.SetAttributeValue("proposedsolution", value);
			}
		}
		
		/// <summary>
		/// Choose whether an individual or a committee will be involved in the  purchase process for the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchaseprocess")]
		public virtual purchaseprocess? PurchaseProcess
		{
			get
			{
				return ((purchaseprocess?)(EntityOptionSetEnum.GetEnum(this, "purchaseprocess")));
			}
			set
			{
				this.SetAttributeValue("purchaseprocess", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchaseprocessname")]
		public string PurchaseProcessName
		{
			get
			{
				if (this.FormattedValues.Contains("purchaseprocess"))
				{
					return this.FormattedValues["purchaseprocess"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose how long the lead will likely take to make the purchase.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchasetimeframe")]
		public virtual purchasetimeframe? PurchaseTimeframe
		{
			get
			{
				return ((purchasetimeframe?)(EntityOptionSetEnum.GetEnum(this, "purchasetimeframe")));
			}
			set
			{
				this.SetAttributeValue("purchasetimeframe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchasetimeframename")]
		public string PurchaseTimeframeName
		{
			get
			{
				if (this.FormattedValues.Contains("purchasetimeframe"))
				{
					return this.FormattedValues["purchasetimeframe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the decision about pursuing the opportunity has been made.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pursuitdecision")]
		public System.Nullable<bool> PursuitDecision
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("pursuitdecision");
			}
			set
			{
				this.SetAttributeValue("pursuitdecision", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pursuitdecisionname")]
		public string PursuitDecisionName
		{
			get
			{
				if (this.FormattedValues.Contains("pursuitdecision"))
				{
					return this.FormattedValues["pursuitdecision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type comments about the qualification or scoring of the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("qualificationcomments")]
		public string QualificationComments
		{
			get
			{
				return this.GetAttributeValue<string>("qualificationcomments");
			}
			set
			{
				this.SetAttributeValue("qualificationcomments", value);
			}
		}
		
		/// <summary>
		/// Type comments about the quotes associated with the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("quotecomments")]
		public string QuoteComments
		{
			get
			{
				return this.GetAttributeValue<string>("quotecomments");
			}
			set
			{
				this.SetAttributeValue("quotecomments", value);
			}
		}
		
		/// <summary>
		/// Choose whether the proposal feedback has been captured and resolved for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvefeedback")]
		public System.Nullable<bool> ResolveFeedback
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("resolvefeedback");
			}
			set
			{
				this.SetAttributeValue("resolvefeedback", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvefeedbackname")]
		public string ResolveFeedbackName
		{
			get
			{
				if (this.FormattedValues.Contains("resolvefeedback"))
				{
					return this.FormattedValues["resolvefeedback"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the sales stage of this opportunity to aid the sales team in their efforts to win this opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstage")]
		public virtual opportunity_salesstage? SalesStage
		{
			get
			{
				return ((opportunity_salesstage?)(EntityOptionSetEnum.GetEnum(this, "salesstage")));
			}
			set
			{
				this.SetAttributeValue("salesstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the sales process stage for the opportunity to indicate the probability of closing the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagecode")]
		public virtual opportunity_salesstagecode? SalesStageCode
		{
			get
			{
				return ((opportunity_salesstagecode?)(EntityOptionSetEnum.GetEnum(this, "salesstagecode")));
			}
			set
			{
				this.SetAttributeValue("salesstagecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagecodename")]
		public string SalesStageCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("salesstagecode"))
				{
					return this.FormattedValues["salesstagecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagename")]
		public string SalesStageName
		{
			get
			{
				if (this.FormattedValues.Contains("salesstage"))
				{
					return this.FormattedValues["salesstage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the date and time of the prospecting follow-up meeting with the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulefollowup_prospect")]
		public System.Nullable<System.DateTime> ScheduleFollowup_Prospect
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("schedulefollowup_prospect");
			}
			set
			{
				this.SetAttributeValue("schedulefollowup_prospect", value);
			}
		}
		
		/// <summary>
		/// Enter the date and time of the qualifying follow-up meeting with the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulefollowup_qualify")]
		public System.Nullable<System.DateTime> ScheduleFollowup_Qualify
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("schedulefollowup_qualify");
			}
			set
			{
				this.SetAttributeValue("schedulefollowup_qualify", value);
			}
		}
		
		/// <summary>
		/// Enter the date and time of the proposal meeting for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleproposalmeeting")]
		public System.Nullable<System.DateTime> ScheduleProposalMeeting
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduleproposalmeeting");
			}
			set
			{
				this.SetAttributeValue("scheduleproposalmeeting", value);
			}
		}
		
		/// <summary>
		/// Select whether a thank you note has been sent to the account for considering the proposal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendthankyounote")]
		public System.Nullable<bool> SendThankYouNote
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendthankyounote");
			}
			set
			{
				this.SetAttributeValue("sendthankyounote", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendthankyounotename")]
		public string SendThankYouNoteName
		{
			get
			{
				if (this.FormattedValues.Contains("sendthankyounote"))
				{
					return this.FormattedValues["sendthankyounote"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Skip Price Calculation (For Internal Use)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skippricecalculation")]
		public virtual qooi_skippricecalculation? SkipPriceCalculation
		{
			get
			{
				return ((qooi_skippricecalculation?)(EntityOptionSetEnum.GetEnum(this, "skippricecalculation")));
			}
			set
			{
				this.SetAttributeValue("skippricecalculation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skippricecalculationname")]
		public string skippricecalculationName
		{
			get
			{
				if (this.FormattedValues.Contains("skippricecalculation"))
				{
					return this.FormattedValues["skippricecalculation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the opportunity record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this opportunity. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the opportunity is open, won, or lost. Won and lost opportunities are read-only and can't be edited until they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual opportunity_statecode? StateCode
		{
			get
			{
				return ((opportunity_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the opportunity's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual opportunity_statuscode? StatusCode
		{
			get
			{
				return ((opportunity_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the ID of the workflow step.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepid")]
		public System.Nullable<System.Guid> StepId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stepid");
			}
			set
			{
				this.SetAttributeValue("stepid", value);
			}
		}
		
		/// <summary>
		/// Shows the current phase in the sales pipeline for the opportunity. 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepname")]
		public string StepName
		{
			get
			{
				return this.GetAttributeValue<string>("stepname");
			}
			set
			{
				this.SetAttributeValue("stepname", value);
			}
		}
		
		/// <summary>
		/// Number of users or conversations followed the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> TeamsFollowed
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			set
			{
				this.SetAttributeValue("teamsfollowed", value);
			}
		}
		
		/// <summary>
		/// Select when the opportunity is likely to be closed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeline")]
		public virtual opportunity_timeline? TimeLine
		{
			get
			{
				return ((opportunity_timeline?)(EntityOptionSetEnum.GetEnum(this, "timeline")));
			}
			set
			{
				this.SetAttributeValue("timeline", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timelinename")]
		public string TimelineName
		{
			get
			{
				if (this.FormattedValues.Contains("timeline"))
				{
					return this.FormattedValues["timeline"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to the opportunity record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMeOnEmailAndMeetings
		{
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamount")]
		public Microsoft.Xrm.Sdk.Money TotalAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamount");
			}
			set
			{
				this.SetAttributeValue("totalamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamount_base");
			}
		}
		
		/// <summary>
		/// Shows the total product amount for the opportunity, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount of the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamountlessfreight")]
		public Microsoft.Xrm.Sdk.Money TotalAmountLessFreight
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamountlessfreight");
			}
			set
			{
				this.SetAttributeValue("totalamountlessfreight", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Pre-Freight Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamountlessfreight_base")]
		public Microsoft.Xrm.Sdk.Money TotalAmountLessFreight_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamountlessfreight_base");
			}
		}
		
		/// <summary>
		/// Shows the total discount amount, based on the discount price and rate entered on the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscountamount")]
		public Microsoft.Xrm.Sdk.Money TotalDiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscountamount");
			}
			set
			{
				this.SetAttributeValue("totaldiscountamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Discount Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscountamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalDiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscountamount_base");
			}
		}
		
		/// <summary>
		/// Shows the sum of all existing and write-in products included on the opportunity, based on the specified price list and quantities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemamount")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemamount");
			}
			set
			{
				this.SetAttributeValue("totallineitemamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Detail Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemamount_base");
			}
		}
		
		/// <summary>
		/// Shows the total of the Manual Discount amounts specified on all products included in the opportunity. This value is reflected in the Total Detail Amount field on the opportunity and is added to any discount amount or rate specified on the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemdiscountamount")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemDiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemdiscountamount");
			}
			set
			{
				this.SetAttributeValue("totallineitemdiscountamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Line Item Discount Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemdiscountamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemDiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemdiscountamount_base");
			}
		}
		
		/// <summary>
		/// Shows the total of the Tax amounts specified on all products included in the opportunity, included in the Total Amount field calculation for the opportunity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaltax")]
		public Microsoft.Xrm.Sdk.Money TotalTax
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaltax");
			}
			set
			{
				this.SetAttributeValue("totaltax", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Tax in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaltax_base")]
		public Microsoft.Xrm.Sdk.Money TotalTax_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaltax_base");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N lead_qualifying_opportunity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lead_qualifying_opportunity")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Lead> lead_qualifying_opportunity
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Lead>("lead_qualifying_opportunity", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Lead>("lead_qualifying_opportunity", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_activity_parties")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> opportunity_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityParty>("opportunity_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityParty>("opportunity_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityPointer> Opportunity_ActivityPointers
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityPointer>("Opportunity_ActivityPointers", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityPointer>("Opportunity_ActivityPointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Annotation")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Annotation> Opportunity_Annotation
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Annotation>("Opportunity_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Annotation>("Opportunity_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> Opportunity_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("Opportunity_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("Opportunity_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_connections1")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> opportunity_connections1
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("opportunity_connections1", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("opportunity_connections1", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_connections2")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> opportunity_connections2
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("opportunity_connections2", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("opportunity_connections2", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Emails")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Email> Opportunity_Emails
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Email>("Opportunity_Emails", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Email>("Opportunity_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Faxes")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Fax> Opportunity_Faxes
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Fax>("Opportunity_Faxes", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Fax>("Opportunity_Faxes", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_OpportunityClose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_OpportunityClose")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.OpportunityClose> Opportunity_OpportunityClose
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.OpportunityClose>("Opportunity_OpportunityClose", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.OpportunityClose>("Opportunity_OpportunityClose", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_OpportunityCloses")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.OpportunityClose> opportunity_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.OpportunityClose>("opportunity_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.OpportunityClose>("opportunity_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_Phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Phonecalls")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.PhoneCall> Opportunity_Phonecalls
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.PhoneCall>("Opportunity_Phonecalls", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.PhoneCall>("Opportunity_Phonecalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> Opportunity_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("Opportunity_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("Opportunity_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_quotes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_quotes")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Quote> opportunity_quotes
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Quote>("opportunity_quotes", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Quote>("opportunity_quotes", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Opportunity_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Tasks")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Task> Opportunity_Tasks
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Task>("Opportunity_Tasks", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Task>("Opportunity_Tasks", null, value);
			}
		}
		
		/// <summary>
		/// 1:N opportunity_Teams
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_Teams")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Team> opportunity_Teams
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Team>("opportunity_Teams", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Team>("opportunity_Teams", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_opportunities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_opportunities")]
		public DataverseEntities.BusinessUnit business_unit_opportunities
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_opportunities", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunity_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunity_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_opportunity_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunity_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunity_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunity_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_opportunity_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunity_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunitybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunitybase_createdby")]
		public DataverseEntities.SystemUser lk_opportunitybase_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunitybase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunitybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunitybase_modifiedby")]
		public DataverseEntities.SystemUser lk_opportunitybase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_opportunitybase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_customer_accounts")]
		public DataverseEntities.Account opportunity_customer_accounts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("opportunity_customer_accounts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("opportunity_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_customer_contacts")]
		public DataverseEntities.Contact opportunity_customer_contacts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("opportunity_customer_contacts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("opportunity_customer_contacts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_originating_lead
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_originating_lead")]
		public DataverseEntities.Lead opportunity_originating_lead
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Lead>("opportunity_originating_lead", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Lead>("opportunity_originating_lead", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_owning_user
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_owning_user")]
		public DataverseEntities.SystemUser opportunity_owning_user
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("opportunity_owning_user", null);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_parent_account")]
		public DataverseEntities.Account opportunity_parent_account
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("opportunity_parent_account", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("opportunity_parent_account", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_parent_contact")]
		public DataverseEntities.Contact opportunity_parent_contact
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("opportunity_parent_contact", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("opportunity_parent_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 processstage_opportunity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_opportunity")]
		public DataverseEntities.ProcessStage processstage_opportunity
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.ProcessStage>("processstage_opportunity", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.ProcessStage>("processstage_opportunity", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_opportunities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_opportunities")]
		public DataverseEntities.Team team_opportunities
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_opportunities", null);
			}
		}
	}
}
#pragma warning restore CS1591
