#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Note that is attached to one or more objects, including other notes.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("annotation")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Annotation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the annotation entity
		/// </summary>
		public partial class Fields
		{
			public const string AnnotationId = "annotationid";
			public const string Id = "annotationid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DocumentBody = "documentbody";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string isAutonomouslyCreated = "isautonomouslycreated";
			public const string isautonomouslycreatedName = "isautonomouslycreatedname";
			public const string IsDocument = "isdocument";
			public const string IsDocumentName = "isdocumentname";
			public const string IsPrivateName = "isprivatename";
			public const string LangId = "langid";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NoteText = "notetext";
			public const string ObjectId = "objectid";
			public const string ObjectTypeCode = "objecttypecode";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Prefix = "prefix";
			public const string StepId = "stepid";
			public const string Subject = "subject";
			public const string VersionNumber = "versionnumber";
			public const string Annotation_AsyncOperations = "Annotation_AsyncOperations";
			public const string Annotation_ProcessSessions = "Annotation_ProcessSessions";
			public const string Account_Annotation = "Account_Annotation";
			public const string annotation_owning_user = "annotation_owning_user";
			public const string business_unit_annotations = "business_unit_annotations";
			public const string Contact_Annotation = "Contact_Annotation";
			public const string Contract_Annotation = "Contract_Annotation";
			public const string Email_Annotation = "Email_Annotation";
			public const string Fax_Annotation = "Fax_Annotation";
			public const string Incident_Annotation = "Incident_Annotation";
			public const string IncidentResolution_Annotation = "IncidentResolution_Annotation";
			public const string Lead_Annotation = "Lead_Annotation";
			public const string List_Annotation = "List_Annotation";
			public const string lk_annotationbase_createdby = "lk_annotationbase_createdby";
			public const string lk_annotationbase_createdonbehalfby = "lk_annotationbase_createdonbehalfby";
			public const string lk_annotationbase_modifiedby = "lk_annotationbase_modifiedby";
			public const string lk_annotationbase_modifiedonbehalfby = "lk_annotationbase_modifiedonbehalfby";
			public const string Opportunity_Annotation = "Opportunity_Annotation";
			public const string OpportunityClose_Annotation = "OpportunityClose_Annotation";
			public const string PhoneCall_Annotation = "PhoneCall_Annotation";
			public const string Quote_Annotation = "Quote_Annotation";
			public const string Task_Annotation = "Task_Annotation";
			public const string team_annotations = "team_annotations";
			public const string Workflow_Annotation = "Workflow_Annotation";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Annotation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "annotation";
		
		public const string EntityLogicalCollectionName = "annotations";
		
		public const string EntitySetName = "annotations";
		
		public const int EntityTypeCode = 5;
		
		/// <summary>
		/// Unique identifier of the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annotationid")]
		public System.Nullable<System.Guid> AnnotationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("annotationid");
			}
			set
			{
				this.SetAttributeValue("annotationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annotationid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.AnnotationId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the note was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the annotation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contents of the note's attachment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentbody")]
		public string DocumentBody
		{
			get
			{
				return this.GetAttributeValue<string>("documentbody");
			}
			set
			{
				this.SetAttributeValue("documentbody", value);
			}
		}
		
		/// <summary>
		/// File name of the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filename")]
		public string FileName
		{
			get
			{
				return this.GetAttributeValue<string>("filename");
			}
			set
			{
				this.SetAttributeValue("filename", value);
			}
		}
		
		/// <summary>
		/// File size of the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filesize")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("filesize");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Determines whether annotation record was autonomously created on conversation wrap up for the linked case record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautonomouslycreated")]
		public System.Nullable<bool> isAutonomouslyCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isautonomouslycreated");
			}
			set
			{
				this.SetAttributeValue("isautonomouslycreated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautonomouslycreatedname")]
		public string isautonomouslycreatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isautonomouslycreated"))
				{
					return this.FormattedValues["isautonomouslycreated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Specifies whether the note is an attachment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdocument")]
		public System.Nullable<bool> IsDocument
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdocument");
			}
			set
			{
				this.SetAttributeValue("isdocument", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdocumentname")]
		public string IsDocumentName
		{
			get
			{
				if (this.FormattedValues.Contains("isdocument"))
				{
					return this.FormattedValues["isdocument"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string IsPrivateName
		{
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Language identifier for the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("langid")]
		public string LangId
		{
			get
			{
				return this.GetAttributeValue<string>("langid");
			}
			set
			{
				this.SetAttributeValue("langid", value);
			}
		}
		
		/// <summary>
		/// MIME type of the note's attachment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
		public string MimeType
		{
			get
			{
				return this.GetAttributeValue<string>("mimetype");
			}
			set
			{
				this.SetAttributeValue("mimetype", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the note was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the annotation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Text of the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notetext")]
		public string NoteText
		{
			get
			{
				return this.GetAttributeValue<string>("notetext");
			}
			set
			{
				this.SetAttributeValue("notetext", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the object with which the note is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		public Microsoft.Xrm.Sdk.EntityReference ObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("objectid");
			}
			set
			{
				this.SetAttributeValue("objectid", value);
			}
		}
		
		/// <summary>
		/// Type of entity with which the note is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttypecode")]
		public string ObjectTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("objecttypecode");
			}
			set
			{
				this.SetAttributeValue("objecttypecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttypecodename")]
		public string ObjectTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("objecttypecode"))
				{
					return this.FormattedValues["objecttypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Prefix of the file pointer in blob storage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prefix")]
		public string Prefix
		{
			get
			{
				return this.GetAttributeValue<string>("prefix");
			}
		}
		
		/// <summary>
		/// workflow step id associated with the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepid")]
		public string StepId
		{
			get
			{
				return this.GetAttributeValue<string>("stepid");
			}
			set
			{
				this.SetAttributeValue("stepid", value);
			}
		}
		
		/// <summary>
		/// Subject associated with the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.SetAttributeValue("subject", value);
			}
		}
		
		/// <summary>
		/// Version number of the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N Annotation_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Annotation_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> Annotation_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("Annotation_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("Annotation_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Annotation_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Annotation_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> Annotation_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("Annotation_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("Annotation_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Account_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Annotation")]
		public DataverseEntities.Account Account_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("Account_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("Account_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 annotation_owning_user
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("annotation_owning_user")]
		public DataverseEntities.SystemUser annotation_owning_user
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("annotation_owning_user", null);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_annotations")]
		public DataverseEntities.BusinessUnit business_unit_annotations
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_annotations", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Annotation")]
		public DataverseEntities.Contact Contact_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("Contact_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("Contact_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Contract_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Annotation")]
		public DataverseEntities.Contract Contract_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contract>("Contract_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contract>("Contract_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Email_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Email_Annotation")]
		public DataverseEntities.Email Email_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Email>("Email_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Email>("Email_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Fax_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Fax_Annotation")]
		public DataverseEntities.Fax Fax_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Fax>("Fax_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Fax>("Fax_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Incident_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Annotation")]
		public DataverseEntities.Incident Incident_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("Incident_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("Incident_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 IncidentResolution_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("IncidentResolution_Annotation")]
		public DataverseEntities.IncidentResolution IncidentResolution_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.IncidentResolution>("IncidentResolution_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.IncidentResolution>("IncidentResolution_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Lead_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_Annotation")]
		public DataverseEntities.Lead Lead_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Lead>("Lead_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Lead>("Lead_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 List_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("List_Annotation")]
		public DataverseEntities.List List_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.List>("List_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.List>("List_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_annotationbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_annotationbase_createdby")]
		public DataverseEntities.SystemUser lk_annotationbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_annotationbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_annotationbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_annotationbase_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_annotationbase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_annotationbase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_annotationbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_annotationbase_modifiedby")]
		public DataverseEntities.SystemUser lk_annotationbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_annotationbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_annotationbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_annotationbase_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_annotationbase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_annotationbase_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 Opportunity_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_Annotation")]
		public DataverseEntities.Opportunity Opportunity_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Opportunity>("Opportunity_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Opportunity>("Opportunity_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 OpportunityClose_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OpportunityClose_Annotation")]
		public DataverseEntities.OpportunityClose OpportunityClose_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.OpportunityClose>("OpportunityClose_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.OpportunityClose>("OpportunityClose_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 PhoneCall_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("PhoneCall_Annotation")]
		public DataverseEntities.PhoneCall PhoneCall_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.PhoneCall>("PhoneCall_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.PhoneCall>("PhoneCall_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Quote_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_Annotation")]
		public DataverseEntities.Quote Quote_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Quote>("Quote_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Quote>("Quote_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Task_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Task_Annotation")]
		public DataverseEntities.Task Task_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Task>("Task_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Task>("Task_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_annotations")]
		public DataverseEntities.Team team_annotations
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_annotations", null);
			}
		}
		
		/// <summary>
		/// N:1 Workflow_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_Annotation")]
		public DataverseEntities.Workflow Workflow_Annotation
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Workflow>("Workflow_Annotation", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Workflow>("Workflow_Annotation", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
