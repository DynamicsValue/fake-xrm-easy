#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Type of instance of a recurring series.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum activityparty_instancetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotRecurring = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringMaster = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringInstance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringException = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecurringFutureException = 4,
	}
	
	/// <summary>
	/// Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum activityparty_participationtypemask
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sender = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ToRecipient = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CCRecipient = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BCCRecipient = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Requiredattendee = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optionalattendee = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Organizer = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regarding = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Owner = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resource = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Customer = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChatParticipant = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Related = 13,
	}
	
	/// <summary>
	/// Person or group associated with an activity. An activity can have multiple activity parties.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("activityparty")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class ActivityParty : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the activityparty entity
		/// </summary>
		public partial class Fields
		{
			public const string ActivityId = "activityid";
			public const string ActivityPartyId = "activitypartyid";
			public const string Id = "activitypartyid";
			public const string AddressUsed = "addressused";
			public const string AddressUsedEmailColumnNumber = "addressusedemailcolumnnumber";
			public const string DoNotEmail = "donotemail";
			public const string DoNotEmailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string Effort = "effort";
			public const string ExchangeEntryId = "exchangeentryid";
			public const string ExternalId = "externalid";
			public const string ExternalIdType = "externalidtype";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsPartyDeleted = "ispartydeleted";
			public const string IsPartyDeletedName = "ispartydeletedname";
			public const string OwnerId = "ownerid";
			public const string ParticipationTypeMask = "participationtypemask";
			public const string ParticipationTypeMaskName = "participationtypemaskname";
			public const string PartyId = "partyid";
			public const string PartyIdName = "partyidname";
			public const string ResourceSpecId = "resourcespecid";
			public const string ResourceSpecIdName = "resourcespecidname";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string UnresolvedPartyName = "unresolvedpartyname";
			public const string VersionNumber = "versionnumber";
			public const string account_activity_parties = "account_activity_parties";
			public const string activitypointer_activity_parties = "activitypointer_activity_parties";
			public const string contact_activity_parties = "contact_activity_parties";
			public const string contract_activity_parties = "contract_activity_parties";
			public const string email_activity_parties = "email_activity_parties";
			public const string fax_activity_parties = "fax_activity_parties";
			public const string incident_activity_parties = "incident_activity_parties";
			public const string incidentresolution_activity_parties = "incidentresolution_activity_parties";
			public const string lead_activity_parties = "lead_activity_parties";
			public const string opportunity_activity_parties = "opportunity_activity_parties";
			public const string opportunityclose_activity_parties = "opportunityclose_activity_parties";
			public const string phonecall_activity_parties = "phonecall_activity_parties";
			public const string queue_activity_parties = "queue_activity_parties";
			public const string quote_activity_parties = "quote_activity_parties";
			public const string system_user_activity_parties = "system_user_activity_parties";
			public const string task_activity_parties = "task_activity_parties";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ActivityParty() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "activityparty";
		
		public const string EntityLogicalCollectionName = "activityparties";
		
		public const string EntitySetName = "activityparties";
		
		public const int EntityTypeCode = 135;
		
		/// <summary>
		/// Unique identifier of the activity associated with the activity party. (A "party" is any person who is associated with an activity.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public Microsoft.Xrm.Sdk.EntityReference ActivityId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("activityid");
			}
			set
			{
				this.SetAttributeValue("activityid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the activity party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitypartyid")]
		public System.Nullable<System.Guid> ActivityPartyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activitypartyid");
			}
			set
			{
				this.SetAttributeValue("activitypartyid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitypartyid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityPartyId = value;
			}
		}
		
		/// <summary>
		/// Email address to which an email is delivered, and which is associated with the target entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("addressused")]
		public string AddressUsed
		{
			get
			{
				return this.GetAttributeValue<string>("addressused");
			}
			set
			{
				this.SetAttributeValue("addressused", value);
			}
		}
		
		/// <summary>
		/// Email address column number from associated party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("addressusedemailcolumnnumber")]
		public System.Nullable<int> AddressUsedEmailColumnNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("addressusedemailcolumnnumber");
			}
		}
		
		/// <summary>
		/// Information about whether to allow sending email to the activity party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public System.Nullable<bool> DoNotEmail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemailname")]
		public string DoNotEmailName
		{
			get
			{
				if (this.FormattedValues.Contains("donotemail"))
				{
					return this.FormattedValues["donotemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether to allow sending faxes to the activity party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public System.Nullable<bool> DoNotFax
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfaxname")]
		public string DoNotFaxName
		{
			get
			{
				if (this.FormattedValues.Contains("donotfax"))
				{
					return this.FormattedValues["donotfax"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether to allow phone calls to the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public System.Nullable<bool> DoNotPhone
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphonename")]
		public string DoNotPhoneName
		{
			get
			{
				if (this.FormattedValues.Contains("donotphone"))
				{
					return this.FormattedValues["donotphone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether to allow sending postal mail to the lead.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public System.Nullable<bool> DoNotPostalMail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmailname")]
		public string DoNotPostalMailName
		{
			get
			{
				if (this.FormattedValues.Contains("donotpostalmail"))
				{
					return this.FormattedValues["donotpostalmail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Amount of effort used by the resource in a service appointment activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effort")]
		public System.Nullable<double> Effort
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("effort");
			}
			set
			{
				this.SetAttributeValue("effort", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeentryid")]
		public string ExchangeEntryId
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeentryid");
			}
			set
			{
				this.SetAttributeValue("exchangeentryid", value);
			}
		}
		
		/// <summary>
		/// The external id used when the party does not have an email address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalid")]
		public string ExternalId
		{
			get
			{
				return this.GetAttributeValue<string>("externalid");
			}
			set
			{
				this.SetAttributeValue("externalid", value);
			}
		}
		
		/// <summary>
		/// The external id type used when the party does not have an email address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalidtype")]
		public string ExternalIdType
		{
			get
			{
				return this.GetAttributeValue<string>("externalidtype");
			}
			set
			{
				this.SetAttributeValue("externalidtype", value);
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual activityparty_instancetypecode? InstanceTypeCode
		{
			get
			{
				return ((activityparty_instancetypecode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecodename")]
		public string InstanceTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("instancetypecode"))
				{
					return this.FormattedValues["instancetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information about whether the underlying entity record is deleted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispartydeleted")]
		public System.Nullable<bool> IsPartyDeleted
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispartydeleted");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispartydeletedname")]
		public string IsPartyDeletedName
		{
			get
			{
				if (this.FormattedValues.Contains("ispartydeleted"))
				{
					return this.FormattedValues["ispartydeleted"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the activity_party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
		}
		
		/// <summary>
		/// Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participationtypemask")]
		public virtual activityparty_participationtypemask? ParticipationTypeMask
		{
			get
			{
				return ((activityparty_participationtypemask?)(EntityOptionSetEnum.GetEnum(this, "participationtypemask")));
			}
			set
			{
				this.SetAttributeValue("participationtypemask", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participationtypemaskname")]
		public string ParticipationTypeMaskName
		{
			get
			{
				if (this.FormattedValues.Contains("participationtypemask"))
				{
					return this.FormattedValues["participationtypemask"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the party associated with the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		public Microsoft.Xrm.Sdk.EntityReference PartyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("partyid");
			}
			set
			{
				this.SetAttributeValue("partyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyidname")]
		public string PartyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("partyid"))
				{
					return this.FormattedValues["partyid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("partyidname", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the resource specification for the activity party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcespecid")]
		public Microsoft.Xrm.Sdk.EntityReference ResourceSpecId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("resourcespecid");
			}
			set
			{
				this.SetAttributeValue("resourcespecid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcespecidname")]
		public string ResourceSpecIdName
		{
			get
			{
				if (this.FormattedValues.Contains("resourcespecid"))
				{
					return this.FormattedValues["resourcespecid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Scheduled end time of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
		}
		
		/// <summary>
		/// Scheduled start time of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
		}
		
		/// <summary>
		/// The name of the party to be used when the party is not resolved to an entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("unresolvedpartyname")]
		public string UnresolvedPartyName
		{
			get
			{
				return this.GetAttributeValue<string>("unresolvedpartyname");
			}
			set
			{
				this.SetAttributeValue("unresolvedpartyname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 account_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_activity_parties")]
		public DataverseEntities.Account account_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("account_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("account_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 activitypointer_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activitypointer_activity_parties")]
		public DataverseEntities.ActivityPointer activitypointer_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.ActivityPointer>("activitypointer_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.ActivityPointer>("activitypointer_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_activity_parties")]
		public DataverseEntities.Contact contact_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("contact_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("contact_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_activity_parties")]
		public DataverseEntities.Contract contract_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contract>("contract_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contract>("contract_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 email_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_activity_parties")]
		public DataverseEntities.Email email_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Email>("email_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Email>("email_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 fax_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("fax_activity_parties")]
		public DataverseEntities.Fax fax_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Fax>("fax_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Fax>("fax_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_activity_parties")]
		public DataverseEntities.Incident incident_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("incident_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("incident_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 incidentresolution_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incidentresolution_activity_parties")]
		public DataverseEntities.IncidentResolution incidentresolution_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.IncidentResolution>("incidentresolution_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.IncidentResolution>("incidentresolution_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lead_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lead_activity_parties")]
		public DataverseEntities.Lead lead_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Lead>("lead_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Lead>("lead_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunity_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_activity_parties")]
		public DataverseEntities.Opportunity opportunity_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Opportunity>("opportunity_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Opportunity>("opportunity_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 opportunityclose_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunityclose_activity_parties")]
		public DataverseEntities.OpportunityClose opportunityclose_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.OpportunityClose>("opportunityclose_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.OpportunityClose>("opportunityclose_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 phonecall_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("phonecall_activity_parties")]
		public DataverseEntities.PhoneCall phonecall_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.PhoneCall>("phonecall_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.PhoneCall>("phonecall_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 queue_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_activity_parties")]
		public DataverseEntities.Queue queue_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Queue>("queue_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Queue>("queue_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 quote_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("quote_activity_parties")]
		public DataverseEntities.Quote quote_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Quote>("quote_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Quote>("quote_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 system_user_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_activity_parties")]
		public DataverseEntities.SystemUser system_user_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("system_user_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.SystemUser>("system_user_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// N:1 task_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("task_activity_parties")]
		public DataverseEntities.Task task_activity_parties
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Task>("task_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Task>("task_activity_parties", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
