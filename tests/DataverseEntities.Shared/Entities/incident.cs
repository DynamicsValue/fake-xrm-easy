#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Information that specifies the type of case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_casetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Question = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Problem = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Request = 3,
	}
	
	/// <summary>
	/// Response level for the case. The response level corresponds to the level of service specified in the contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_contractservicelevelcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gold = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Silver = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bronze = 3,
	}
	
	/// <summary>
	/// Customer's level of satisfaction with the resolution of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_customersatisfactioncode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VerySatisfied = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Satisfied = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Neutral = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dissatisfied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VeryDissatisfied = 1,
	}
	
	/// <summary>
	/// First Response SLA Status
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_firstresponseslastatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NearingNoncompliance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noncompliant = 4,
	}
	
	/// <summary>
	/// Stage of the resolution process for the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_incidentstagecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum msdyn_case_msdyn_casesentiment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Verynegative = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Negative = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Slightlynegative = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Neutral = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Slightlypositive = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Positive = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Verypositive = 13,
	}
	
	/// <summary>
	/// Priority of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Normal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 3,
	}
	
	/// <summary>
	/// ResolveBy SLA Status
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_resolvebyslastatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NearingNoncompliance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noncompliant = 4,
	}
	
	/// <summary>
	/// Severity of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_severitycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Status of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resolved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 2,
	}
	
	/// <summary>
	/// Reason for the status of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum incident_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ProblemSolved = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InformationProvided = 1000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Merged = 2000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WaitingforDetails = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Researching = 4,
	}
	
	/// <summary>
	/// Service request case associated with a contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("incident")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Incident : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the incident entity
		/// </summary>
		public partial class Fields
		{
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActivitiesComplete = "activitiescomplete";
			public const string ActivitiesCompleteName = "activitiescompletename";
			public const string ActualServiceUnits = "actualserviceunits";
			public const string BilledServiceUnits = "billedserviceunits";
			public const string BlockedProfile = "blockedprofile";
			public const string BlockedProfileName = "blockedprofilename";
			public const string caseage = "caseage";
			public const string CaseOriginCode = "caseorigincode";
			public const string CaseOriginCodeName = "caseorigincodename";
			public const string CaseTypeCode = "casetypecode";
			public const string CaseTypeCodeName = "casetypecodename";
			public const string CheckEmail = "checkemail";
			public const string CheckEmailName = "checkemailname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string ContractDetailId = "contractdetailid";
			public const string ContractDetailIdName = "contractdetailidname";
			public const string ContractId = "contractid";
			public const string ContractIdName = "contractidname";
			public const string ContractServiceLevelCode = "contractservicelevelcode";
			public const string ContractServiceLevelCodeName = "contractservicelevelcodename";
			public const string CreatedBy = "createdby";
			public const string CreatedByExternalParty = "createdbyexternalparty";
			public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
			public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerContacted = "customercontacted";
			public const string customercontactedName = "customercontactedname";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerSatisfactionCode = "customersatisfactioncode";
			public const string CustomerSatisfactionCodeName = "customersatisfactioncodename";
			public const string deactivatedon = "deactivatedon";
			public const string DecrementEntitlementTerm = "decremententitlementterm";
			public const string DecrementEntitlementTermName = "decremententitlementtermname";
			public const string Description = "description";
			public const string EmailAddress = "emailaddress";
			public const string EntitlementId = "entitlementid";
			public const string EntitlementIdName = "entitlementidname";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string EscalatedOn = "escalatedon";
			public const string ExchangeRate = "exchangerate";
			public const string ExistingCase = "existingcase";
			public const string FirstResponseByKPIId = "firstresponsebykpiid";
			public const string FirstResponseByKPIIdName = "firstresponsebykpiidname";
			public const string FirstResponseSent = "firstresponsesent";
			public const string FirstResponseSentName = "firstresponsesentname";
			public const string FirstResponseSLAStatus = "firstresponseslastatus";
			public const string FirstResponseSLAStatusName = "firstresponseslastatusname";
			public const string FollowupBy = "followupby";
			public const string FollowUpTaskCreated = "followuptaskcreated";
			public const string FollowUpTaskCreatedName = "followuptaskcreatedname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IncidentId = "incidentid";
			public const string Id = "incidentid";
			public const string IncidentStageCode = "incidentstagecode";
			public const string IncidentStageCodeName = "incidentstagecodename";
			public const string InfluenceScore = "influencescore";
			public const string IsDecrementing = "isdecrementing";
			public const string IsDecrementingName = "isdecrementingname";
			public const string IsEscalated = "isescalated";
			public const string IsEscalatedName = "isescalatedname";
			public const string KbArticleId = "kbarticleid";
			public const string KbArticleIdName = "kbarticleidname";
			public const string lastinteraction = "lastinteraction";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string MasterId = "masterid";
			public const string MasterIdName = "masteridname";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string MessageTypeCode = "messagetypecode";
			public const string MessageTypeCodeName = "messagetypecodename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByExternalParty = "modifiedbyexternalparty";
			public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
			public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string msdyn_casesentiment = "msdyn_casesentiment";
			public const string msdyn_casesentimentName = "msdyn_casesentimentname";
			public const string msdyn_CaseSurveyInviteUrl = "msdyn_casesurveyinviteurl";
			public const string msdyn_copilotengaged = "msdyn_copilotengaged";
			public const string msdyn_copilotengagedName = "msdyn_copilotengagedname";
			public const string msdyn_iotalert = "msdyn_iotalert";
			public const string msdyn_iotalertName = "msdyn_iotalertname";
			public const string msdyn_precreateattachmentsid = "msdyn_precreateattachmentsid";
			public const string msdyn_precreatenotesid = "msdyn_precreatenotesid";
			public const string nextsla = "nextsla";
			public const string NumberOfChildIncidents = "numberofchildincidents";
			public const string OnHoldTime = "onholdtime";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentCaseId = "parentcaseid";
			public const string ParentCaseIdName = "parentcaseidname";
			public const string PrimaryContactId = "primarycontactid";
			public const string PrimaryContactIdName = "primarycontactidname";
			public const string PrimaryContactIdYomiName = "primarycontactidyominame";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string ProductSerialNumber = "productserialnumber";
			public const string ResolveBy = "resolveby";
			public const string ResolveByKPIId = "resolvebykpiid";
			public const string ResolveByKPIIdName = "resolvebykpiidname";
			public const string ResolveBySLAStatus = "resolvebyslastatus";
			public const string ResolveBySLAStatusName = "resolvebyslastatusname";
			public const string ResponseBy = "responseby";
			public const string ResponsibleContactId = "responsiblecontactid";
			public const string ResponsibleContactIdName = "responsiblecontactidname";
			public const string ResponsibleContactIdYomiName = "responsiblecontactidyominame";
			public const string RouteCase = "routecase";
			public const string routecaseName = "routecasename";
			public const string SentimentValue = "sentimentvalue";
			public const string ServiceStage = "servicestage";
			public const string ServiceStageName = "servicestagename";
			public const string SeverityCode = "severitycode";
			public const string SeverityCodeName = "severitycodename";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string SocialProfileId = "socialprofileid";
			public const string SocialProfileIdName = "socialprofileidname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubjectId = "subjectid";
			public const string SubjectIdName = "subjectidname";
			public const string TicketNumber = "ticketnumber";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string incident_activity_parties = "incident_activity_parties";
			public const string Incident_ActivityPointers = "Incident_ActivityPointers";
			public const string Incident_Annotation = "Incident_Annotation";
			public const string Incident_AsyncOperations = "Incident_AsyncOperations";
			public const string incident_connections1 = "incident_connections1";
			public const string incident_connections2 = "incident_connections2";
			public const string Incident_Emails = "Incident_Emails";
			public const string Referencedincident_existingcase = "Referencedincident_existingcase";
			public const string Incident_Faxes = "Incident_Faxes";
			public const string Incident_IncidentResolutions = "Incident_IncidentResolutions";
			public const string Referencedincident_master_incident = "Referencedincident_master_incident";
			public const string incident_OpportunityCloses = "incident_OpportunityCloses";
			public const string Referencedincident_parent_incident = "Referencedincident_parent_incident";
			public const string Incident_Phonecalls = "Incident_Phonecalls";
			public const string Incident_ProcessSessions = "Incident_ProcessSessions";
			public const string Incident_QueueItem = "Incident_QueueItem";
			public const string Incident_Tasks = "Incident_Tasks";
			public const string OriginatingCase_Lead = "OriginatingCase_Lead";
			public const string business_unit_incidents = "business_unit_incidents";
			public const string contact_as_primary_contact = "contact_as_primary_contact";
			public const string contact_as_responsible_contact = "contact_as_responsible_contact";
			public const string contract_cases = "contract_cases";
			public const string incident_customer_accounts = "incident_customer_accounts";
			public const string incident_customer_contacts = "incident_customer_contacts";
			public const string Referencingincident_existingcase = "incident_existingcase";
			public const string Referencingincident_master_incident = "incident_master_incident";
			public const string Referencingincident_parent_incident = "incident_parent_incident";
			public const string lk_incidentbase_createdby = "lk_incidentbase_createdby";
			public const string lk_incidentbase_createdonbehalfby = "lk_incidentbase_createdonbehalfby";
			public const string lk_incidentbase_modifiedby = "lk_incidentbase_modifiedby";
			public const string lk_incidentbase_modifiedonbehalfby = "lk_incidentbase_modifiedonbehalfby";
			public const string processstage_incident = "processstage_incident";
			public const string system_user_incidents = "system_user_incidents";
			public const string team_incidents = "team_incidents";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Incident() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "incident";
		
		public const string EntityLogicalCollectionName = "incidents";
		
		public const string EntitySetName = "incidents";
		
		public const int EntityTypeCode = 112;
		
		/// <summary>
		/// Unique identifier of the account with which the case is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
		public string AccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
		public string AccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitiescomplete")]
		public System.Nullable<bool> ActivitiesComplete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("activitiescomplete");
			}
			set
			{
				this.SetAttributeValue("activitiescomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitiescompletename")]
		public string ActivitiesCompleteName
		{
			get
			{
				if (this.FormattedValues.Contains("activitiescomplete"))
				{
					return this.FormattedValues["activitiescomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the number of service units that were actually required to resolve the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualserviceunits")]
		public System.Nullable<int> ActualServiceUnits
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualserviceunits");
			}
			set
			{
				this.SetAttributeValue("actualserviceunits", value);
			}
		}
		
		/// <summary>
		/// Type the number of service units that were billed to the customer for the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billedserviceunits")]
		public System.Nullable<int> BilledServiceUnits
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("billedserviceunits");
			}
			set
			{
				this.SetAttributeValue("billedserviceunits", value);
			}
		}
		
		/// <summary>
		/// Details whether the profile is blocked or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("blockedprofile")]
		public System.Nullable<bool> BlockedProfile
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("blockedprofile");
			}
			set
			{
				this.SetAttributeValue("blockedprofile", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("blockedprofilename")]
		public string BlockedProfileName
		{
			get
			{
				if (this.FormattedValues.Contains("blockedprofile"))
				{
					return this.FormattedValues["blockedprofile"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the duration for which the Case has been active for Active and Resolved Cases.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseage")]
		public string caseage
		{
			get
			{
				return this.GetAttributeValue<string>("caseage");
			}
		}
		
		/// <summary>
		/// Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseorigincode")]
		public virtual incident_caseorigincode? CaseOriginCode
		{
			get
			{
				return ((incident_caseorigincode?)(EntityOptionSetEnum.GetEnum(this, "caseorigincode")));
			}
			set
			{
				this.SetAttributeValue("caseorigincode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseorigincodename")]
		public string CaseOriginCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("caseorigincode"))
				{
					return this.FormattedValues["caseorigincode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the type of case to identify the incident for use in case routing and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("casetypecode")]
		public virtual incident_casetypecode? CaseTypeCode
		{
			get
			{
				return ((incident_casetypecode?)(EntityOptionSetEnum.GetEnum(this, "casetypecode")));
			}
			set
			{
				this.SetAttributeValue("casetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("casetypecodename")]
		public string CaseTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("casetypecode"))
				{
					return this.FormattedValues["casetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkemail")]
		public System.Nullable<bool> CheckEmail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("checkemail");
			}
			set
			{
				this.SetAttributeValue("checkemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkemailname")]
		public string CheckEmailName
		{
			get
			{
				if (this.FormattedValues.Contains("checkemail"))
				{
					return this.FormattedValues["checkemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact associated with the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidname")]
		public string ContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidyominame")]
		public string ContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the contract line that the case should be logged under to make sure the customer is charged correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractDetailId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractdetailid");
			}
			set
			{
				this.SetAttributeValue("contractdetailid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailidname")]
		public string ContractDetailIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contractdetailid"))
				{
					return this.FormattedValues["contractdetailid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the service contract that the case should be logged under to make sure the customer is eligible for support services.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractid");
			}
			set
			{
				this.SetAttributeValue("contractid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractidname")]
		public string ContractIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contractid"))
				{
					return this.FormattedValues["contractid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the service level for the case to make sure the case is handled correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcode")]
		public virtual incident_contractservicelevelcode? ContractServiceLevelCode
		{
			get
			{
				return ((incident_contractservicelevelcode?)(EntityOptionSetEnum.GetEnum(this, "contractservicelevelcode")));
			}
			set
			{
				this.SetAttributeValue("contractservicelevelcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcodename")]
		public string ContractServiceLevelCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("contractservicelevelcode"))
				{
					return this.FormattedValues["contractservicelevelcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
		public string CreatedByExternalPartyName
		{
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
		public string CreatedByExternalPartyYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether customer service representative has contacted the customer or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customercontacted")]
		public System.Nullable<bool> CustomerContacted
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("customercontacted");
			}
			set
			{
				this.SetAttributeValue("customercontacted", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customercontactedname")]
		public string customercontactedName
		{
			get
			{
				if (this.FormattedValues.Contains("customercontacted"))
				{
					return this.FormattedValues["customercontacted"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.SetAttributeValue("customerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridname")]
		public string CustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridyominame")]
		public string CustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the customer's level of satisfaction with the handling and resolution of the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersatisfactioncode")]
		public virtual incident_customersatisfactioncode? CustomerSatisfactionCode
		{
			get
			{
				return ((incident_customersatisfactioncode?)(EntityOptionSetEnum.GetEnum(this, "customersatisfactioncode")));
			}
			set
			{
				this.SetAttributeValue("customersatisfactioncode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersatisfactioncodename")]
		public string CustomerSatisfactionCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("customersatisfactioncode"))
				{
					return this.FormattedValues["customersatisfactioncode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date time when the Case was resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deactivatedon")]
		public System.Nullable<System.DateTime> deactivatedon
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("deactivatedon");
			}
			set
			{
				this.SetAttributeValue("deactivatedon", value);
			}
		}
		
		/// <summary>
		/// Shows whether terms of the associated entitlement should be decremented or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decremententitlementterm")]
		public System.Nullable<bool> DecrementEntitlementTerm
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("decremententitlementterm");
			}
			set
			{
				this.SetAttributeValue("decremententitlementterm", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decremententitlementtermname")]
		public string DecrementEntitlementTermName
		{
			get
			{
				if (this.FormattedValues.Contains("decremententitlementterm"))
				{
					return this.FormattedValues["decremententitlementterm"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type additional information to describe the case to assist the service team in reaching a resolution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// Choose the entitlement that is applicable for the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public Microsoft.Xrm.Sdk.EntityReference EntitlementId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementid");
			}
			set
			{
				this.SetAttributeValue("entitlementid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementidname")]
		public string EntitlementIdName
		{
			get
			{
				if (this.FormattedValues.Contains("entitlementid"))
				{
					return this.FormattedValues["entitlementid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Indicates the date and time when the case was escalated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("escalatedon")]
		public System.Nullable<System.DateTime> EscalatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("escalatedon");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select an existing case for the customer that has been populated. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
		public Microsoft.Xrm.Sdk.EntityReference ExistingCase
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("existingcase");
			}
			set
			{
				this.SetAttributeValue("existingcase", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsebykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference FirstResponseByKPIId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("firstresponsebykpiid");
			}
			set
			{
				this.SetAttributeValue("firstresponsebykpiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsebykpiidname")]
		public string FirstResponseByKPIIdName
		{
			get
			{
				if (this.FormattedValues.Contains("firstresponsebykpiid"))
				{
					return this.FormattedValues["firstresponsebykpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates if the first response has been sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsesent")]
		public System.Nullable<bool> FirstResponseSent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("firstresponsesent");
			}
			set
			{
				this.SetAttributeValue("firstresponsesent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsesentname")]
		public string FirstResponseSentName
		{
			get
			{
				if (this.FormattedValues.Contains("firstresponsesent"))
				{
					return this.FormattedValues["firstresponsesent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the status of the initial response time for the case according to the terms of the SLA.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponseslastatus")]
		public virtual incident_firstresponseslastatus? FirstResponseSLAStatus
		{
			get
			{
				return ((incident_firstresponseslastatus?)(EntityOptionSetEnum.GetEnum(this, "firstresponseslastatus")));
			}
			set
			{
				this.SetAttributeValue("firstresponseslastatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponseslastatusname")]
		public string FirstResponseSLAStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("firstresponseslastatus"))
				{
					return this.FormattedValues["firstresponseslastatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the date by which a customer service representative has to follow up with the customer on this case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followupby")]
		public System.Nullable<System.DateTime> FollowupBy
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("followupby");
			}
			set
			{
				this.SetAttributeValue("followupby", value);
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followuptaskcreated")]
		public System.Nullable<bool> FollowUpTaskCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followuptaskcreated");
			}
			set
			{
				this.SetAttributeValue("followuptaskcreated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followuptaskcreatedname")]
		public string FollowUpTaskCreatedName
		{
			get
			{
				if (this.FormattedValues.Contains("followuptaskcreated"))
				{
					return this.FormattedValues["followuptaskcreated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
		public System.Nullable<System.Guid> IncidentId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("incidentid");
			}
			set
			{
				this.SetAttributeValue("incidentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.IncidentId = value;
			}
		}
		
		/// <summary>
		/// Select the current stage of the service process for the case to assist service team members when they review or transfer a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentstagecode")]
		public virtual incident_incidentstagecode? IncidentStageCode
		{
			get
			{
				return ((incident_incidentstagecode?)(EntityOptionSetEnum.GetEnum(this, "incidentstagecode")));
			}
			set
			{
				this.SetAttributeValue("incidentstagecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentstagecodename")]
		public string IncidentStageCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("incidentstagecode"))
				{
					return this.FormattedValues["incidentstagecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Will contain the Influencer score coming from NetBreeze.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("influencescore")]
		public System.Nullable<double> InfluenceScore
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("influencescore");
			}
			set
			{
				this.SetAttributeValue("influencescore", value);
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdecrementing")]
		public System.Nullable<bool> IsDecrementing
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdecrementing");
			}
			set
			{
				this.SetAttributeValue("isdecrementing", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdecrementingname")]
		public string IsDecrementingName
		{
			get
			{
				if (this.FormattedValues.Contains("isdecrementing"))
				{
					return this.FormattedValues["isdecrementing"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates if the case has been escalated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isescalated")]
		public System.Nullable<bool> IsEscalated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isescalated");
			}
			set
			{
				this.SetAttributeValue("isescalated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isescalatedname")]
		public string IsEscalatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isescalated"))
				{
					return this.FormattedValues["isescalated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the article that contains additional information or a resolution for the case, for reference during research or follow up with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbarticleid")]
		public Microsoft.Xrm.Sdk.EntityReference KbArticleId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("kbarticleid");
			}
			set
			{
				this.SetAttributeValue("kbarticleid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbarticleidname")]
		public string KbArticleIdName
		{
			get
			{
				if (this.FormattedValues.Contains("kbarticleid"))
				{
					return this.FormattedValues["kbarticleid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the latest activity associated with the Case and the action performed on that activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastinteraction")]
		public string lastinteraction
		{
			get
			{
				return this.GetAttributeValue<string>("lastinteraction");
			}
		}
		
		/// <summary>
		/// Contains the date time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Choose the primary case the current case was merged into.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference MasterId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
			set
			{
				this.SetAttributeValue("masterid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masteridname")]
		public string MasterIdName
		{
			get
			{
				if (this.FormattedValues.Contains("masterid"))
				{
					return this.FormattedValues["masterid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether the incident has been merged with another incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public System.Nullable<bool> Merged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("merged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mergedname")]
		public string MergedName
		{
			get
			{
				if (this.FormattedValues.Contains("merged"))
				{
					return this.FormattedValues["merged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows whether the post originated as a public or private message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagetypecode")]
		public virtual socialactivity_postmessagetype? MessageTypeCode
		{
			get
			{
				return ((socialactivity_postmessagetype?)(EntityOptionSetEnum.GetEnum(this, "messagetypecode")));
			}
			set
			{
				this.SetAttributeValue("messagetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagetypecodename")]
		public string MessageTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("messagetypecode"))
				{
					return this.FormattedValues["messagetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
		public string ModifiedByExternalPartyName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
		public string ModifiedByExternalPartyYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_casesentiment")]
		public virtual msdyn_case_msdyn_casesentiment? msdyn_casesentiment
		{
			get
			{
				return ((msdyn_case_msdyn_casesentiment?)(EntityOptionSetEnum.GetEnum(this, "msdyn_casesentiment")));
			}
			set
			{
				this.SetAttributeValue("msdyn_casesentiment", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_casesentimentname")]
		public string msdyn_casesentimentName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_casesentiment"))
				{
					return this.FormattedValues["msdyn_casesentiment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Survey invite url for customer feedback.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_casesurveyinviteurl")]
		public string msdyn_CaseSurveyInviteUrl
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_casesurveyinviteurl");
			}
			set
			{
				this.SetAttributeValue("msdyn_casesurveyinviteurl", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengaged")]
		public System.Nullable<bool> msdyn_copilotengaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_copilotengaged");
			}
			set
			{
				this.SetAttributeValue("msdyn_copilotengaged", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengagedname")]
		public string msdyn_copilotengagedName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_copilotengaged"))
				{
					return this.FormattedValues["msdyn_copilotengaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The iot alert that initiated this case
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_iotalert")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_iotalert
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_iotalert");
			}
			set
			{
				this.SetAttributeValue("msdyn_iotalert", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_iotalertname")]
		public string msdyn_iotalertName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_iotalert"))
				{
					return this.FormattedValues["msdyn_iotalert"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Entity Attachments Id before the case record is created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_precreateattachmentsid")]
		public string msdyn_precreateattachmentsid
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_precreateattachmentsid");
			}
			set
			{
				this.SetAttributeValue("msdyn_precreateattachmentsid", value);
			}
		}
		
		/// <summary>
		/// Notes Id before the case record is created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_precreatenotesid")]
		public string msdyn_precreatenotesid
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_precreatenotesid");
			}
			set
			{
				this.SetAttributeValue("msdyn_precreatenotesid", value);
			}
		}
		
		/// <summary>
		/// Shows the unresolved SLA KPI associated with the Case with the earliest expiry time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextsla")]
		public string nextsla
		{
			get
			{
				return this.GetAttributeValue<string>("nextsla");
			}
			set
			{
				this.SetAttributeValue("nextsla", value);
			}
		}
		
		/// <summary>
		/// Number of child incidents associated with the incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildincidents")]
		public System.Nullable<int> NumberOfChildIncidents
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofchildincidents");
			}
		}
		
		/// <summary>
		/// Shows the duration in minutes for which the case was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the parent case for a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentCaseId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcaseid");
			}
			set
			{
				this.SetAttributeValue("parentcaseid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseidname")]
		public string ParentCaseIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentcaseid"))
				{
					return this.FormattedValues["parentcaseid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select a primary contact for this case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		public Microsoft.Xrm.Sdk.EntityReference PrimaryContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
			}
			set
			{
				this.SetAttributeValue("primarycontactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidname")]
		public string PrimaryContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("primarycontactid"))
				{
					return this.FormattedValues["primarycontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidyominame")]
		public string PrimaryContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("primarycontactid"))
				{
					return this.FormattedValues["primarycontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual incident_prioritycode? PriorityCode
		{
			get
			{
				return ((incident_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Choose the product associated with the case to identify warranty, service, or other product issues and be able to report the number of incidents for each product.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productid")]
		public Microsoft.Xrm.Sdk.EntityReference ProductId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("productid");
			}
			set
			{
				this.SetAttributeValue("productid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productidname")]
		public string ProductIdName
		{
			get
			{
				if (this.FormattedValues.Contains("productid"))
				{
					return this.FormattedValues["productid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productserialnumber")]
		public string ProductSerialNumber
		{
			get
			{
				return this.GetAttributeValue<string>("productserialnumber");
			}
			set
			{
				this.SetAttributeValue("productserialnumber", value);
			}
		}
		
		/// <summary>
		/// Enter the date by when the case must be resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolveby")]
		public System.Nullable<System.DateTime> ResolveBy
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("resolveby");
			}
			set
			{
				this.SetAttributeValue("resolveby", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference ResolveByKPIId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("resolvebykpiid");
			}
			set
			{
				this.SetAttributeValue("resolvebykpiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebykpiidname")]
		public string ResolveByKPIIdName
		{
			get
			{
				if (this.FormattedValues.Contains("resolvebykpiid"))
				{
					return this.FormattedValues["resolvebykpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the status of the resolution time for the case according to the terms of the SLA.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebyslastatus")]
		public virtual incident_resolvebyslastatus? ResolveBySLAStatus
		{
			get
			{
				return ((incident_resolvebyslastatus?)(EntityOptionSetEnum.GetEnum(this, "resolvebyslastatus")));
			}
			set
			{
				this.SetAttributeValue("resolvebyslastatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebyslastatusname")]
		public string ResolveBySLAStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("resolvebyslastatus"))
				{
					return this.FormattedValues["resolvebyslastatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responseby")]
		public System.Nullable<System.DateTime> ResponseBy
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("responseby");
			}
			set
			{
				this.SetAttributeValue("responseby", value);
			}
		}
		
		/// <summary>
		/// Choose an additional customer contact who can also help resolve the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
		[System.ObsoleteAttribute()]
		public Microsoft.Xrm.Sdk.EntityReference ResponsibleContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("responsiblecontactid");
			}
			set
			{
				this.SetAttributeValue("responsiblecontactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactidname")]
		[System.ObsoleteAttribute()]
		public string ResponsibleContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("responsiblecontactid"))
				{
					return this.FormattedValues["responsiblecontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactidyominame")]
		[System.ObsoleteAttribute()]
		public string ResponsibleContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("responsiblecontactid"))
				{
					return this.FormattedValues["responsiblecontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether the incident has been routed to queue or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("routecase")]
		public System.Nullable<bool> RouteCase
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("routecase");
			}
			set
			{
				this.SetAttributeValue("routecase", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("routecasename")]
		public string routecaseName
		{
			get
			{
				if (this.FormattedValues.Contains("routecase"))
				{
					return this.FormattedValues["routecase"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sentimentvalue")]
		public System.Nullable<double> SentimentValue
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("sentimentvalue");
			}
			set
			{
				this.SetAttributeValue("sentimentvalue", value);
			}
		}
		
		/// <summary>
		/// Select the stage, in the case resolution process, that the case is in.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicestage")]
		public virtual servicestage? ServiceStage
		{
			get
			{
				return ((servicestage?)(EntityOptionSetEnum.GetEnum(this, "servicestage")));
			}
			set
			{
				this.SetAttributeValue("servicestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicestagename")]
		public string ServiceStageName
		{
			get
			{
				if (this.FormattedValues.Contains("servicestage"))
				{
					return this.FormattedValues["servicestage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the severity of this case to indicate the incident's impact on the customer's business.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("severitycode")]
		public virtual incident_severitycode? SeverityCode
		{
			get
			{
				return ((incident_severitycode?)(EntityOptionSetEnum.GetEnum(this, "severitycode")));
			}
			set
			{
				this.SetAttributeValue("severitycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("severitycodename")]
		public string SeverityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("severitycode"))
				{
					return this.FormattedValues["severitycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the case record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the social profile with which the case is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialprofileid")]
		public Microsoft.Xrm.Sdk.EntityReference SocialProfileId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("socialprofileid");
			}
			set
			{
				this.SetAttributeValue("socialprofileid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialprofileidname")]
		public string SocialProfileIdName
		{
			get
			{
				if (this.FormattedValues.Contains("socialprofileid"))
				{
					return this.FormattedValues["socialprofileid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual incident_statecode? StateCode
		{
			get
			{
				return ((incident_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the case's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual incident_statuscode? StatusCode
		{
			get
			{
				return ((incident_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the subject for the case, such as catalog request or product complaint, so customer service managers can identify frequent requests or problem areas. Administrators can configure subjects under Business Management in the Settings area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectid")]
		public Microsoft.Xrm.Sdk.EntityReference SubjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("subjectid");
			}
			set
			{
				this.SetAttributeValue("subjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectidname")]
		public string SubjectIdName
		{
			get
			{
				if (this.FormattedValues.Contains("subjectid"))
				{
					return this.FormattedValues["subjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the case number for customer reference and searching capabilities. This cannot be modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ticketnumber")]
		public string TicketNumber
		{
			get
			{
				return this.GetAttributeValue<string>("ticketnumber");
			}
			set
			{
				this.SetAttributeValue("ticketnumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N incident_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_activity_parties")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> incident_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityParty>("incident_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityParty>("incident_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityPointer> Incident_ActivityPointers
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityPointer>("Incident_ActivityPointers", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityPointer>("Incident_ActivityPointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Annotation")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Annotation> Incident_Annotation
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Annotation>("Incident_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Annotation>("Incident_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> Incident_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("Incident_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("Incident_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_connections1")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> incident_connections1
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("incident_connections1", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("incident_connections1", null, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_connections2")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> incident_connections2
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("incident_connections2", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("incident_connections2", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Emails")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Email> Incident_Emails
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Email>("Incident_Emails", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Email>("Incident_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_existingcase
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Incident> Referencedincident_existingcase
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Faxes")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Fax> Incident_Faxes
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Fax>("Incident_Faxes", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Fax>("Incident_Faxes", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_IncidentResolutions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_IncidentResolutions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.IncidentResolution> Incident_IncidentResolutions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.IncidentResolution>("Incident_IncidentResolutions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.IncidentResolution>("Incident_IncidentResolutions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_master_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Incident> Referencedincident_master_incident
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_OpportunityCloses")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.OpportunityClose> incident_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.OpportunityClose>("incident_OpportunityCloses", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.OpportunityClose>("incident_OpportunityCloses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N incident_parent_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Incident> Referencedincident_parent_incident
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_Phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Phonecalls")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.PhoneCall> Incident_Phonecalls
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.PhoneCall>("Incident_Phonecalls", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.PhoneCall>("Incident_Phonecalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> Incident_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("Incident_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("Incident_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_QueueItem")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.QueueItem> Incident_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.QueueItem>("Incident_QueueItem", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.QueueItem>("Incident_QueueItem", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Incident_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Tasks")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Task> Incident_Tasks
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Task>("Incident_Tasks", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Task>("Incident_Tasks", null, value);
			}
		}
		
		/// <summary>
		/// 1:N OriginatingCase_Lead
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OriginatingCase_Lead")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Lead> OriginatingCase_Lead
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Lead>("OriginatingCase_Lead", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Lead>("OriginatingCase_Lead", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_incidents")]
		public DataverseEntities.BusinessUnit business_unit_incidents
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_incidents", null);
			}
		}
		
		/// <summary>
		/// N:1 contact_as_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_primary_contact")]
		public DataverseEntities.Contact contact_as_primary_contact
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("contact_as_primary_contact", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("contact_as_primary_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_as_responsible_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_responsible_contact")]
		public DataverseEntities.Contact contact_as_responsible_contact
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("contact_as_responsible_contact", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("contact_as_responsible_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_cases
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_cases")]
		public DataverseEntities.Contract contract_cases
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contract>("contract_cases", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contract>("contract_cases", null, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_accounts")]
		public DataverseEntities.Account incident_customer_accounts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("incident_customer_accounts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("incident_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_contacts")]
		public DataverseEntities.Contact incident_customer_contacts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("incident_customer_contacts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("incident_customer_contacts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_existingcase
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseEntities.Incident Referencingincident_existingcase
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_master_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseEntities.Incident Referencingincident_master_incident
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 incident_parent_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseEntities.Incident Referencingincident_parent_incident
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_incidentbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_createdby")]
		public DataverseEntities.SystemUser lk_incidentbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_incidentbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_incidentbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_incidentbase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_incidentbase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_incidentbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_modifiedby")]
		public DataverseEntities.SystemUser lk_incidentbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_incidentbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_incidentbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_incidentbase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 processstage_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_incident")]
		public DataverseEntities.ProcessStage processstage_incident
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.ProcessStage>("processstage_incident", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.ProcessStage>("processstage_incident", null, value);
			}
		}
		
		/// <summary>
		/// N:1 system_user_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_incidents")]
		public DataverseEntities.SystemUser system_user_incidents
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("system_user_incidents", null);
			}
		}
		
		/// <summary>
		/// N:1 team_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_incidents")]
		public DataverseEntities.Team team_incidents
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_incidents", null);
			}
		}
	}
}
#pragma warning restore CS1591
