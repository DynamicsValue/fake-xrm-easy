#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseEntities
{
	
	
	/// <summary>
	/// Type of allotment that the contract supports.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum contract_allotmenttypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NumberofCases = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Time = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CoverageDates = 3,
	}
	
	/// <summary>
	/// How often the customer or account is to be billed.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum contract_billingfrequencycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Monthly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bimonthly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Quarterly = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Semiannually = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Annually = 5,
	}
	
	/// <summary>
	/// Response level or level of service specified for the contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum contract_contractservicelevelcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gold = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Silver = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bronze = 3,
	}
	
	/// <summary>
	/// Status of the contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum contract_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoiced = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 5,
	}
	
	/// <summary>
	/// Reason for the status of the contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum contract_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoiced = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 6,
	}
	
	/// <summary>
	/// Agreement to provide customer service during a specified amount of time or number of cases.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contract")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Contract : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the contract entity
		/// </summary>
		public partial class Fields
		{
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActiveOn = "activeon";
			public const string AllotmentTypeCode = "allotmenttypecode";
			public const string AllotmentTypeCodeName = "allotmenttypecodename";
			public const string BillingAccountId = "billingaccountid";
			public const string BillingAccountIdName = "billingaccountidname";
			public const string BillingAccountIdYomiName = "billingaccountidyominame";
			public const string BillingContactId = "billingcontactid";
			public const string BillingContactIdName = "billingcontactidname";
			public const string BillingContactIdYomiName = "billingcontactidyominame";
			public const string BillingCustomerId = "billingcustomerid";
			public const string BillingCustomerIdName = "billingcustomeridname";
			public const string BillingCustomerIdYomiName = "billingcustomeridyominame";
			public const string BillingEndOn = "billingendon";
			public const string BillingFrequencyCode = "billingfrequencycode";
			public const string BillingFrequencyCodeName = "billingfrequencycodename";
			public const string BillingStartOn = "billingstarton";
			public const string BillToAddress = "billtoaddress";
			public const string BillToAddressName = "billtoaddressname";
			public const string CancelOn = "cancelon";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string ContractId = "contractid";
			public const string Id = "contractid";
			public const string ContractLanguage = "contractlanguage";
			public const string ContractNumber = "contractnumber";
			public const string ContractServiceLevelCode = "contractservicelevelcode";
			public const string ContractServiceLevelCodeName = "contractservicelevelcodename";
			public const string ContractTemplateAbbreviation = "contracttemplateabbreviation";
			public const string ContractTemplateId = "contracttemplateid";
			public const string ContractTemplateIdName = "contracttemplateidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string Duration = "duration";
			public const string EffectivityCalendar = "effectivitycalendar";
			public const string EmailAddress = "emailaddress";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiresOn = "expireson";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NetPrice = "netprice";
			public const string NetPrice_Base = "netprice_base";
			public const string OriginatingContract = "originatingcontract";
			public const string OriginatingContractName = "originatingcontractname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ServiceAddress = "serviceaddress";
			public const string ServiceAddressName = "serviceaddressname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TotalDiscount = "totaldiscount";
			public const string TotalDiscount_Base = "totaldiscount_base";
			public const string TotalPrice = "totalprice";
			public const string TotalPrice_Base = "totalprice_base";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UseDiscountAsPercentage = "usediscountaspercentage";
			public const string UseDiscountAsPercentageName = "usediscountaspercentagename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string contract_activity_parties = "contract_activity_parties";
			public const string Contract_ActivityPointers = "Contract_ActivityPointers";
			public const string Contract_Annotation = "Contract_Annotation";
			public const string Contract_AsyncOperations = "Contract_AsyncOperations";
			public const string contract_cases = "contract_cases";
			public const string contract_connections1 = "contract_connections1";
			public const string contract_connections2 = "contract_connections2";
			public const string Contract_Emails = "Contract_Emails";
			public const string Contract_Faxes = "Contract_Faxes";
			public const string Referencedcontract_originating_contract = "Referencedcontract_originating_contract";
			public const string Contract_Phonecalls = "Contract_Phonecalls";
			public const string Contract_ProcessSessions = "Contract_ProcessSessions";
			public const string Contract_Tasks = "Contract_Tasks";
			public const string servicecontractcontacts_association = "servicecontractcontacts_association";
			public const string business_unit_service_contracts = "business_unit_service_contracts";
			public const string contract_billingcustomer_accounts = "contract_billingcustomer_accounts";
			public const string contract_billingcustomer_contacts = "contract_billingcustomer_contacts";
			public const string contract_customer_accounts = "contract_customer_accounts";
			public const string contract_customer_contacts = "contract_customer_contacts";
			public const string Referencingcontract_originating_contract = "contract_originating_contract";
			public const string lk_contract_createdonbehalfby = "lk_contract_createdonbehalfby";
			public const string lk_contract_modifiedonbehalfby = "lk_contract_modifiedonbehalfby";
			public const string lk_contractbase_createdby = "lk_contractbase_createdby";
			public const string lk_contractbase_modifiedby = "lk_contractbase_modifiedby";
			public const string system_user_service_contracts = "system_user_service_contracts";
			public const string team_service_contracts = "team_service_contracts";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Contract() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "contract";
		
		public const string EntityLogicalCollectionName = "contracts";
		
		public const string EntitySetName = "contracts";
		
		public const int EntityTypeCode = 1010;
		
		/// <summary>
		/// Unique identifier of the account with which the contract is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
		public string AccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
		public string AccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the date when the contract becomes active.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeon")]
		public System.Nullable<System.DateTime> ActiveOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("activeon");
			}
			set
			{
				this.SetAttributeValue("activeon", value);
			}
		}
		
		/// <summary>
		/// Type of allotment that the contract supports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmenttypecode")]
		public virtual contract_allotmenttypecode? AllotmentTypeCode
		{
			get
			{
				return ((contract_allotmenttypecode?)(EntityOptionSetEnum.GetEnum(this, "allotmenttypecode")));
			}
			set
			{
				this.SetAttributeValue("allotmenttypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmenttypecodename")]
		public string AllotmentTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("allotmenttypecode"))
				{
					return this.FormattedValues["allotmenttypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the account to which the contract is to be billed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingaccountid")]
		public Microsoft.Xrm.Sdk.EntityReference BillingAccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingaccountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingaccountidname")]
		public string BillingAccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("billingaccountid"))
				{
					return this.FormattedValues["billingaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingaccountidyominame")]
		public string BillingAccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("billingaccountid"))
				{
					return this.FormattedValues["billingaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact to whom the contract is to be billed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference BillingContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingcontactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcontactidname")]
		public string BillingContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("billingcontactid"))
				{
					return this.FormattedValues["billingcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcontactidyominame")]
		public string BillingContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("billingcontactid"))
				{
					return this.FormattedValues["billingcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to which the contract should be billed to provide a quick link to address and other customer details.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
		public Microsoft.Xrm.Sdk.EntityReference BillingCustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingcustomerid");
			}
			set
			{
				this.SetAttributeValue("billingcustomerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomeridname")]
		public string BillingCustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("billingcustomerid"))
				{
					return this.FormattedValues["billingcustomerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomeridyominame")]
		public string BillingCustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("billingcustomerid"))
				{
					return this.FormattedValues["billingcustomerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the end date for the contract's billing period to indicate the period for which the customer must pay for a service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingendon")]
		public System.Nullable<System.DateTime> BillingEndOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("billingendon");
			}
			set
			{
				this.SetAttributeValue("billingendon", value);
			}
		}
		
		/// <summary>
		/// Select the billing schedule of the contract to indicate how often the customer should be invoiced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingfrequencycode")]
		public virtual contract_billingfrequencycode? BillingFrequencyCode
		{
			get
			{
				return ((contract_billingfrequencycode?)(EntityOptionSetEnum.GetEnum(this, "billingfrequencycode")));
			}
			set
			{
				this.SetAttributeValue("billingfrequencycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingfrequencycodename")]
		public string BillingFrequencyCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("billingfrequencycode"))
				{
					return this.FormattedValues["billingfrequencycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the start date for the contract's billing period to indicate the period for which the customer must pay for a service. This defaults to the same date that is selected in the Contract Start Date field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingstarton")]
		public System.Nullable<System.DateTime> BillingStartOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("billingstarton");
			}
			set
			{
				this.SetAttributeValue("billingstarton", value);
			}
		}
		
		/// <summary>
		/// Choose which address to send the invoice to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billtoaddress")]
		public Microsoft.Xrm.Sdk.EntityReference BillToAddress
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billtoaddress");
			}
			set
			{
				this.SetAttributeValue("billtoaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billtoaddressname")]
		public string BillToAddressName
		{
			get
			{
				if (this.FormattedValues.Contains("billtoaddress"))
				{
					return this.FormattedValues["billtoaddress"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the contract was canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cancelon")]
		public System.Nullable<System.DateTime> CancelOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cancelon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact specified for the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidname")]
		public string ContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidyominame")]
		public string ContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		public System.Nullable<System.Guid> ContractId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contractid");
			}
			set
			{
				this.SetAttributeValue("contractid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ContractId = value;
			}
		}
		
		/// <summary>
		/// Type additional information about the contract, such as the products or services provided to the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractlanguage")]
		public string ContractLanguage
		{
			get
			{
				return this.GetAttributeValue<string>("contractlanguage");
			}
			set
			{
				this.SetAttributeValue("contractlanguage", value);
			}
		}
		
		/// <summary>
		/// Shows the number for the contract for customer reference and searching capabilities. You cannot modify this number.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractnumber")]
		public string ContractNumber
		{
			get
			{
				return this.GetAttributeValue<string>("contractnumber");
			}
			set
			{
				this.SetAttributeValue("contractnumber", value);
			}
		}
		
		/// <summary>
		/// Select the level of service that should be provided for the contract based on your company's definition of bronze, silver, or gold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcode")]
		public virtual contract_contractservicelevelcode? ContractServiceLevelCode
		{
			get
			{
				return ((contract_contractservicelevelcode?)(EntityOptionSetEnum.GetEnum(this, "contractservicelevelcode")));
			}
			set
			{
				this.SetAttributeValue("contractservicelevelcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcodename")]
		public string ContractServiceLevelCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("contractservicelevelcode"))
				{
					return this.FormattedValues["contractservicelevelcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the abbreviation of the contract template selected when the contract is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contracttemplateabbreviation")]
		public string ContractTemplateAbbreviation
		{
			get
			{
				return this.GetAttributeValue<string>("contracttemplateabbreviation");
			}
		}
		
		/// <summary>
		/// Choose the contract template that should be used to determine the terms of the contract, such as allotment type, available hours, and billing frequency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contracttemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractTemplateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contracttemplateid");
			}
			set
			{
				this.SetAttributeValue("contracttemplateid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contracttemplateidname")]
		public string ContractTemplateIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contracttemplateid"))
				{
					return this.FormattedValues["contracttemplateid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.SetAttributeValue("customerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridname")]
		public string CustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridyominame")]
		public string CustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows for the duration of the contract, in days, based on the contract start and end dates.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
		}
		
		/// <summary>
		/// Days of the week and times during which customer service support is available for the duration of the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivitycalendar")]
		public string EffectivityCalendar
		{
			get
			{
				return this.GetAttributeValue<string>("effectivitycalendar");
			}
			set
			{
				this.SetAttributeValue("effectivitycalendar", value);
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Enter the date when the contract expires.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expireson")]
		public System.Nullable<System.DateTime> ExpiresOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expireson");
			}
			set
			{
				this.SetAttributeValue("expireson", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the total charge to the customer for the service contract, calculated as the sum of values in the Net field for each existing contract line related to the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("netprice")]
		public Microsoft.Xrm.Sdk.Money NetPrice
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("netprice");
			}
		}
		
		/// <summary>
		/// Value of the Net Price in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("netprice_base")]
		public Microsoft.Xrm.Sdk.Money NetPrice_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("netprice_base");
			}
		}
		
		/// <summary>
		/// Choose the original contract that this contract was created from. This information is used to track renewal history.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingcontract")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingContract
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingcontract");
			}
			set
			{
				this.SetAttributeValue("originatingcontract", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingcontractname")]
		public string OriginatingContractName
		{
			get
			{
				if (this.FormattedValues.Contains("originatingcontract"))
				{
					return this.FormattedValues["originatingcontract"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the address for the customer account or contact where the services are provided.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceaddress")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceAddress
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceaddress");
			}
			set
			{
				this.SetAttributeValue("serviceaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceaddressname")]
		public string ServiceAddressName
		{
			get
			{
				if (this.FormattedValues.Contains("serviceaddress"))
				{
					return this.FormattedValues["serviceaddress"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows whether the contract is in draft, invoiced, active, on hold, canceled, or expired. You can edit only the contracts that are in draft status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual contract_statecode? StateCode
		{
			get
			{
				return ((contract_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the contract's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual contract_statuscode? StatusCode
		{
			get
			{
				return ((contract_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Type a title or name for the contract that indicates the purpose of the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Shows the total discount applied to the contract's service charges, calculated as the sum of values in the Discount fields for each existing contract line related to the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscount")]
		public Microsoft.Xrm.Sdk.Money TotalDiscount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscount");
			}
		}
		
		/// <summary>
		/// Value of the Total Discount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscount_base")]
		public Microsoft.Xrm.Sdk.Money TotalDiscount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscount_base");
			}
		}
		
		/// <summary>
		/// Shows the total service charge for the contract, before any discounts are credited. This is calculated as the sum of values in the Total Price field for each existing contract line related to the contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalprice")]
		public Microsoft.Xrm.Sdk.Money TotalPrice
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalprice");
			}
		}
		
		/// <summary>
		/// Value of the Total Price in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalprice_base")]
		public Microsoft.Xrm.Sdk.Money TotalPrice_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalprice_base");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the discounts entered on contract lines for this contract should be entered as a percentage or a fixed dollar value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usediscountaspercentage")]
		public System.Nullable<bool> UseDiscountAsPercentage
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usediscountaspercentage");
			}
			set
			{
				this.SetAttributeValue("usediscountaspercentage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usediscountaspercentagename")]
		public string UseDiscountAsPercentageName
		{
			get
			{
				if (this.FormattedValues.Contains("usediscountaspercentage"))
				{
					return this.FormattedValues["usediscountaspercentage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N contract_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_activity_parties")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityParty> contract_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityParty>("contract_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityParty>("contract_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ActivityPointer> Contract_ActivityPointers
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ActivityPointer>("Contract_ActivityPointers", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ActivityPointer>("Contract_ActivityPointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Annotation")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Annotation> Contract_Annotation
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Annotation>("Contract_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Annotation>("Contract_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.AsyncOperation> Contract_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.AsyncOperation>("Contract_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.AsyncOperation>("Contract_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contract_cases
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_cases")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Incident> contract_cases
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Incident>("contract_cases", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Incident>("contract_cases", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contract_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_connections1")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> contract_connections1
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("contract_connections1", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("contract_connections1", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contract_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_connections2")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Connection> contract_connections2
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Connection>("contract_connections2", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Connection>("contract_connections2", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Emails")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Email> Contract_Emails
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Email>("Contract_Emails", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Email>("Contract_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Faxes")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Fax> Contract_Faxes
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Fax>("Contract_Faxes", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Fax>("Contract_Faxes", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contract_originating_contract
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Contract> Referencedcontract_originating_contract
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_Phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Phonecalls")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.PhoneCall> Contract_Phonecalls
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.PhoneCall>("Contract_Phonecalls", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.PhoneCall>("Contract_Phonecalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.ProcessSession> Contract_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.ProcessSession>("Contract_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.ProcessSession>("Contract_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contract_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Tasks")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Task> Contract_Tasks
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Task>("Contract_Tasks", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Task>("Contract_Tasks", null, value);
			}
		}
		
		/// <summary>
		/// N:N servicecontractcontacts_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("servicecontractcontacts_association")]
		public System.Collections.Generic.IEnumerable<DataverseEntities.Contact> servicecontractcontacts_association
		{
			get
			{
				return this.GetRelatedEntities<DataverseEntities.Contact>("servicecontractcontacts_association", null);
			}
			set
			{
				this.SetRelatedEntities<DataverseEntities.Contact>("servicecontractcontacts_association", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_service_contracts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_service_contracts")]
		public DataverseEntities.BusinessUnit business_unit_service_contracts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.BusinessUnit>("business_unit_service_contracts", null);
			}
		}
		
		/// <summary>
		/// N:1 contract_billingcustomer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_billingcustomer_accounts")]
		public DataverseEntities.Account contract_billingcustomer_accounts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("contract_billingcustomer_accounts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("contract_billingcustomer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_billingcustomer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_billingcustomer_contacts")]
		public DataverseEntities.Contact contract_billingcustomer_contacts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("contract_billingcustomer_contacts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("contract_billingcustomer_contacts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_customer_accounts")]
		public DataverseEntities.Account contract_customer_accounts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Account>("contract_customer_accounts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Account>("contract_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_customer_contacts")]
		public DataverseEntities.Contact contract_customer_contacts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contact>("contract_customer_contacts", null);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contact>("contract_customer_contacts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contract_originating_contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingcontract")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseEntities.Contract Referencingcontract_originating_contract
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<DataverseEntities.Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_contract_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contract_createdonbehalfby")]
		public DataverseEntities.SystemUser lk_contract_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_contract_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_contract_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contract_modifiedonbehalfby")]
		public DataverseEntities.SystemUser lk_contract_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_contract_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_contractbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractbase_createdby")]
		public DataverseEntities.SystemUser lk_contractbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_contractbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_contractbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractbase_modifiedby")]
		public DataverseEntities.SystemUser lk_contractbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("lk_contractbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 system_user_service_contracts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_service_contracts")]
		public DataverseEntities.SystemUser system_user_service_contracts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.SystemUser>("system_user_service_contracts", null);
			}
		}
		
		/// <summary>
		/// N:1 team_service_contracts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_service_contracts")]
		public DataverseEntities.Team team_service_contracts
		{
			get
			{
				return this.GetRelatedEntity<DataverseEntities.Team>("team_service_contracts", null);
			}
		}
	}
}
#pragma warning restore CS1591
